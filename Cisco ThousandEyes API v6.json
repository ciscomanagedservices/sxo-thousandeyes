{
  "swagger": "2.0",
  "info": {
    "version": "1.0",
    "title": "Cisco ThousandEyes API v6",
    "description": "# Cisco ThousandEyes API (v6) Postman Collection\n\nThis is a Postman collection and environment variables covering Cisco ThousandEyes v6 APIs.\n\n## Cisco ThousandEyes\nThousandEyes is the light that illuminates the path an application takes as it traversing infrastructure outside the\nfour walls of the traditional enterprise network. When you can see and hence understand the path,\nyou can assure the user experience is as expected, and know what to remediate when it isn‚Äôt.\n\n\n## What's in the Postman collection\n- A Sandbox access is available [here](https://www.thousandeyes.com/signup/). \n- The collection correlates with the official ThousandEyes [API documentation](https://developer.thousandeyes.com/v6/).\n\n**ThousandEyes Endpoints** covered in this collection\n1. Instant Tests\n2. Tests\n3. Test Data\n4. Credentials\n5. Endpoint Data\n6. Endpoint Scheduled Tests\n7. Endpoint Scheduled Test Data\n8. Endpoint Instant Tests\n9. Snapshots\n10. Agents & Monitors\n11. Alerts & Notifications\n12. Labels\n13. Reports\n14. Administrative Endpoints\n15. Usage\n\n‚ö†Ô∏è ***Make sure you update your Environment Variables with the latest Token and Device information!***\n\nüÜí ***Javascript Tests scripts included with this collection to auto-update Environment variables where it fits***",
    "contact": {}
  },
  "host": "example.com",
  "basePath": "/v6",
  "securityDefinitions": {},
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/instant/{testType}": {
      "post": {
        "description": "# Instant test\nCreates and runs a new Instant test in ThousandEyes, based on properties provided in the POST data. In order to create and run an Instant test, the user attempting the creation must be a Regular user or have the following permissions:\n* API Access\n* View tests\n\n# Optional (Querystring) Parameters\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {testType} corresponds to any of the following options:\n  * agent-to-agent\n  * agent-to-server\n  * http-server\n  * page-load\n  * transactions\n  * web-transactions\n  * ftp-server\n  * dns-trace\n  * dns-server\n  * dns-dnssec\n  * dnsp-domain\n  * dnsp-server\n  * sip-server\n  * voice (RTP Stream)\nNote: bgp tests are currently not supported\n\n* Request body should contain fields to be set during creation. See the Test Metadata page for fields available during test creation. The following fields are accepted but will be ignored by the Instant test API:\n  * interval\n  * subinterval\n  * alertsEnabled\n  * alertRules\n  * bgpMeasurements\n  * bgpMonitors",
        "summary": "Instant test",
        "tags": [
          "Instant tests"
        ],
        "operationId": "Instanttest",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/InstanttestRequest"
            }
          },
          {
            "name": "testType",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/instant/{testId}/rerun": {
      "post": {
        "description": "# Instant test rerun\nReruns an existent Instant test in ThousandEyes. In order to rerun an Instant test, the user attempting the rerun must be a Regular user or have the following permissions:\n* API Access\n* View tests\n\n# Optional (Querystring) Parameters\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {testId} the ID of the Instant test you wish to rerun.\n* There is no request body for this request.",
        "summary": "Instant test rerun",
        "tags": [
          "Instant tests"
        ],
        "operationId": "Instanttestrerun",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "testId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/tests.json": {
      "get": {
        "description": "# Test list\nReturns a list of all tests configured in ThousandEyes. Also returns data for saved events, which are indicated by a boolean field, \"savedEvent\": 1\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information",
        "summary": "Test list",
        "tags": [
          "Tests"
        ],
        "operationId": "Testlist",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/tests/{testType}.json": {
      "get": {
        "description": "# Test list by type\nReturns a list of all tests of the type specified, configured in ThousandEyes. Also returns data for saved events, which are indicated by a boolean field, \"savedEvent\": 1\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {testType} corresponds to any of the following options:\n  * agent-to-server\n  * agent-to-agent\n  * bgp\n  * http-server\n  * page-load\n  * transactions\n  * web-transactions\n  * ftp-server\n  * dns-trace\n  * dns-server\n  * dns-dnssec\n  * dnsp-domain\n  * dnsp-server\n  * sip-server\n  * voice (RTP Stream)",
        "summary": "Test list by type",
        "tags": [
          "Tests"
        ],
        "operationId": "Testlistbytype",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "testType",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/tests/{testId}.json": {
      "get": {
        "description": "# Test details\nReturns a details for a test, including test type, name, intervals, targets, alert rules and agents.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {testId} the ID of the test you wish to retrieve",
        "summary": "Test details",
        "tags": [
          "Tests"
        ],
        "operationId": "Testdetails",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "testId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/tests/{testType}/new.json": {
      "post": {
        "description": "# Creating a test\nCreates a new test in ThousandEyes, based on properties provided in the POST data. In order to create a new test, the user attempting the creation must be an Account Admin.\n\nRegular users are blocked from using any of the POST-based methods.\n\nNote: When creating or updating a test and assigning alert rules, that alert rules are based on specific measurements being available. For example, when creating an HTTP server test with network measurements disabled, you will not be able to assign any alert rules that are based on network metrics. The same applies to BGP measurements.\n\n# Optional (Querystring) Parameters\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {testType} corresponds to any of the following options:\n  * agent-to-server\n  * agent-to-agent\n  * bgp\n  * http-server\n  * page-load\n  * transactions\n  * web-transactions\n  * ftp-server\n  * dns-trace\n  * dns-server\n  * dns-dnssec\n  * dnsp-domain\n  * dnsp-server\n  * sip-server\n  * voice (RTP Stream)\n* Request body should contain fields to be set during creation. See the [Test Metadata](https://developer.thousandeyes.com/v6/tests/#/test_metadata) page for fields available during test creation.",
        "summary": "Creating a test",
        "tags": [
          "Tests"
        ],
        "operationId": "Creatingatest",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "example": "{\n\t\"interval\": 120,\n\t\"agents\": [{\n\t\t\"agentId\": {{agentId}}\n\t}],\n\t\"testName\": \"Postman - developer.cisco.com\",\n\t\"url\": \"https://developer.cisco.com\",\n\t\"port\": 443,\n\t\"alertsEnabled\": 0,\n\t\"enabled\": 1\n}",
              "type": "string"
            }
          },
          {
            "name": "testType",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/tests/{testType}/{testId}/update.json": {
      "post": {
        "description": "# Updating a test\nUpdates a test in ThousandEyes, based on properties provided in the POST data. In order to edit a test, the user attempting the creation must be an Account Admin, and the target test cannot be a live share or saved event.\n\nRegular users are blocked from using any of the POST-based methods.\n\nNote: When creating or updating a test and assigning alert rules, that alert rules are based on specific measurements being available. For example, when creating an HTTP server test with network measurements disabled, you will not be able to assign any alert rules that are based on network metrics. The same applies to BGP measurements.\n\n# Optional (Querystring) Parameters\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {testType} corresponds to any of the following options:\n  * bgp\n  * agent-to-server\n  * agent-to-agent\n  * http-server\n  * page-load\n  * transactions\n  * web-transactions\n  * ftp-server\n  * dns-trace\n  * dns-server\n  * dns-dnssec\n  * sip-server\n  * voice (RTP Stream)\n* {testId} corresponds to a testId of the type specified by {testType}, see the test list endpoint for a listing of tests\n* Request body should contain fields to be set during creation. See the [Test Metadata](https://developer.thousandeyes.com/v6/tests/#/test_metadata) page for fields available during test creation.",
        "summary": "Updating a test",
        "tags": [
          "Tests"
        ],
        "operationId": "Updatingatest",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "example": "{\n\t\"interval\": 120,\n\t\"agents\": [{\n\t\t\"agentId\": {{agentId}}\n\t}],\n\t\"testName\": \"Postman - developer.cisco.com - Updated\",\n\t\"url\": \"https://developer.cisco.com\",\n\t\"port\": 443,\n\t\"alertsEnabled\": 0,\n\t\"enabled\": 1\n}",
              "type": "string"
            }
          },
          {
            "name": "testType",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "testId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/tests/{testType}/{testId}/delete.json": {
      "post": {
        "description": "# Deleting a test\nDeletes the specified test in ThousandEyes, based on the testId provided in the API request. In order to delete a test, the user attempting the creation must be an Account Admin.\n\nRegular users are blocked from using any of the POST-based methods.\n\n# Optional (Querystring) Parameters\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {testType} corresponds to any of the following options:\n  * bgp\n  * agent-to-server\n  * agent-to-agent\n  * http-server\n  * page-load\n  * transactions\n  * web-transactions\n  * ftp-server\n  * dns-trace\n  * dns-server\n  * dns-dnssec\n  * sip-server\n  * voice (RTP Stream)\n* {testId} corresponds to a testId of the type specified by {testType}, see the test list endpoint for a listing of tests.",
        "summary": "Deleting a test",
        "tags": [
          "Tests"
        ],
        "operationId": "Deletingatest",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "testType",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "testId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/net/metrics/{testId}.json": {
      "get": {
        "description": "# (Network) End-to-End metrics\nReturns network metrics (loss, latency, jitter, and bandwidth) from each agent, for each roundId in the requested window. A time frame must be specified, or the current round of data will be returned.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* window=[0-9]+[smhdw]? specifies a window of time for the result set. See Time Ranges for more information.\n* from=YYYY-mm-ddTHH:MM:SS&to=YYYY-mm-ddTHH:MM:SS specifies an explicit start (and optionally, end) for your range of data. See Time Ranges for more information.\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n* direction=[FROM_TARGET, TO_TARGET, BIDIRECTIONAL] Applicable only for bidirectional Agent-to-Agent tests, specifies the direction for the metrics being retrieved. In the case of bidirectional data, the aggregated data is returned, otherwise unidirectional data will be returned. In the case of unidirectional tests queried with an invalid direction parameter, an error response will be thrown.\n\n# Request\n* {testId} the ID of the test you wish to retrieve",
        "summary": "Network: End-to-End Metrics",
        "tags": [
          "Network"
        ],
        "operationId": "Network:End-to-EndMetrics",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "testId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/net/path-vis/{testId}.json": {
      "get": {
        "description": "# (Network) Path visualization\nReturns a summary of the path visualization data collected from each agent to the destination. In each path visualization attempt, three attempts are made to reach the destination. Each set of data is summarized, based on response time, number of hops, and response time to the target. A time frame must be specified, or the current round of data will be returned.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* window=[0-9]+[smhdw]? specifies a window of time for the result set. See Time Ranges for more information.\nfrom=YYYY-mm-ddTHH:MM:SS&to=YYYY-mm-ddTHH:MM:SS specifies an explicit start (and optionally, end) for your range of data. See Time Ranges for more information.\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n* direction=[FROM_TARGET, TO_TARGET] Applicable only for bidirectional Agent-to-Agent tests, specifies the direction for the metrics being retrieved. If available, bidirectional data is returned by default.\n\n# Request\n* {testId} the ID of the test you wish to retrieve",
        "summary": "Network: Path visualization",
        "tags": [
          "Network"
        ],
        "operationId": "Network:Pathvisualization",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "testId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/net/path-vis/{testId}/{agentId}/{roundId}.json": {
      "get": {
        "description": "# (Network) Detailed path trace\nReturns a hop-by-hop summary of the path trace data collected during path visualization. In each path visualization attempt, three attempts are made to reach the destination, and the entire path will be shown in sequence. A roundId must be specified. For agent-to-agent tests, there‚Äôs a special case to consider, since the test can be bidirectional.\n\nConsider agents A, B and C testing agent D, on a bidirectional basis. To query for the route from agent A to agent D, query with testId/{agentA}/roundId?direction=TO_TARGET. For the path from D to A, query with testId/{agentA}/roundId?direction=FROM_TARGET. To get both paths, query the same endpoint with direction=BIDIRECTIONAL. In all cases, the source field will reflect agent A, and the destination field will reflect agent D, but the direction field will show the direction of the trace.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\nRequired parameters:\n* {testId} the ID of the test you wish to retrieve\n* {agentId} the ID of the agent from which you wish to obtain data\n* {roundId} the round ID for which you wish to obtain data. Equals the beginning of the testing round, in epoch time format.\n\nOptional request parameter:\n* direction=[TO_TARGET, FROM_TARGET, BIDIRECTIONAL] indicates the direction of a path trace in the case of a bidirectional agent-to-agent test. This parameter is only applied in the case of bidirectional agent-to-agent tests. Specify the value on the querystring. Without specifying the field, the test will use the default direction for the test, which is chosen based on the following list:\n  * BIDIRECTIONAL (shows both TO_TARGET and FROM_TARGET directions)\n  * TO_TARGET (shows path from source agent to target agent)\n  * FROM_TARGET (shows path from target agent to source agent)",
        "summary": "Network: Detailed path trace",
        "tags": [
          "Network"
        ],
        "operationId": "Network:Detailedpathtrace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "testId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "agentId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "roundId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/net/bgp-metrics/{testId}.json": {
      "get": {
        "description": "# (Network) BGP metrics\nReturns a list of BGP monitors observing the target prefix of the destination, and returns the prefix, AS Number, and reachability, path updates, and path changes for the target network.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* window=[0-9]+[smhdw]? specifies a window of time for the result set. See Time Ranges for more information.\n* from=YYYY-mm-ddTHH:MM:SS&to=YYYY-mm-ddTHH:MM:SS specifies an explicit start (and optionally, end) for your range of data. See Time Ranges for more information.\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {testId} the ID of the test for which BGP data is of interest",
        "summary": "Network: BGP metrics",
        "tags": [
          "Network"
        ],
        "operationId": "Network:BGPmetrics",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "testId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/net/bgp-routes/{testId}/{prefixId}/{roundId}.json": {
      "get": {
        "description": "# (Network) BGP route information\nReturns a sequenced list of networks transited for a specific network prefix. Shows a list of monitors assigned to the test, and the paths transited to reach the destination. This is analogous to showing the ASPath information from a BGP Routing Information Base (rib) dump.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {testId} the ID of the test for which BGP data is of interest\n* {prefixId} the ID of the prefix in question. Obtain prefixId from the /net/bgp-metrics/{testId} endpoint\n* {roundId} the round for which you wish to obtain data. Obtain roundId from the /net/bgp-metrics/{testId} endpoint",
        "summary": "Network: BGP route information",
        "tags": [
          "Network"
        ],
        "operationId": "Network:BGProuteinformation",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "testId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "prefixId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "roundId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/web/http-server/{testId}.json": {
      "get": {
        "description": "# (Web) HTTP server\nReturns response code, response and fetch times, TLS session details and component-level (DNS, Connect, Wait, Receive and Fetch) timing for the load of an object over HTTP.\n\n# Optional (Querystring) Parameters\n*format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n*window=[0-9]+[smhdw]? specifies a window of time for the result set. See Time Ranges for more information.\n*from=YYYY-mm-ddTHH:MM:SS&to=YYYY-mm-ddTHH:MM:SS specifies an explicit start (and optionally, end) for your range of data. See Time Ranges for more information.\n*aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n*headers=1 optional, will output request and response header information in output. Example below assumes headers=1 was specified as an optional parameter.\n*certificates=1 output list of certificates in the certificate chain. Example below includes certificates=1 as a parameter.\n\n# Request\n* {testId} the ID of the HTTP Server (or page load) test you wish to retrieve",
        "summary": "Web: HTTP server",
        "tags": [
          "Web"
        ],
        "operationId": "Web:HTTPserver",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "testId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/web/page-load/{testId}.json": {
      "get": {
        "description": "# (Web) Page load\nReturns response time, total size, count of objects and errors, and provides page and DOM load times for a web page.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* window=[0-9]+[smhdw]? specifies a window of time for the result set. See Time Ranges for more information.\n* from=YYYY-mm-ddTHH:MM:SS&to=YYYY-mm-ddTHH:MM:SS specifies an explicit start (and optionally, end) for your range of data. See Time Ranges for more information.\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {testId} the ID of the page load test you for wish to retrieve data",
        "summary": "Web: Page load",
        "tags": [
          "Web"
        ],
        "operationId": "Web:Pageload",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "testId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/web/page-load/{testId}/{agentId}/{roundId}.json": {
      "get": {
        "description": "# (Web) Page load component detail\nReturns HAR (http archive) information, including component list and timing for elements loaded in a Page Load test. This is analogous to what is shown in the waterfall view for a Page Load test, with an agent selected. Includes response data, dns, connect, ssl, send, wait and receive times for each component loaded in a page.\n\nNote: this endpoint is only available in v5 or higher of the ThousandEyes API\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {testId} the ID of the Page Load test you for wish to retrieve data\n* {agentId} the ID of the agent for which you wish to retrieve data\n* {roundId} the ID of the round for which you wish to retrieve data",
        "summary": "Web: Page load component detail",
        "tags": [
          "Web"
        ],
        "operationId": "Web:Pageloadcomponentdetail",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "testId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "agentId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "roundId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/web/transactions/{testId}.json": {
      "get": {
        "description": "# (Web) Transactions\nReturns transaction time, counts of steps and errors from each agent selected to run a transaction. A time frame must be specified, or the current round of data will be returned.\n\nFor step-level detail, see Detailed Transactions\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* window=[0-9]+[smhdw]? specifies a window of time for the result set. See Time Ranges for more information.\n* from=YYYY-mm-ddTHH:MM:SS&to=YYYY-mm-ddTHH:MM:SS specifies an explicit start (and optionally, end) for your range of data. See Time Ranges for more information.\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {testId} the ID of the transaction you wish to retrieve",
        "summary": "Web: Transactions",
        "tags": [
          "Web"
        ],
        "operationId": "Web:Transactions",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "testId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/web/transactions/{testId}/{agentId}/{roundId}.json": {
      "get": {
        "description": "# (Web) Transaction detail\nReturns transaction time, duration and error counts of steps and pages transited during a execution of a transaction. An agent and roundId is required, since results from a single round of transaction execution will be returned.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {testId} the ID of the transaction you wish to retrieve\n* {agentId} the ID of the agent for which you wish to obtain transaction data\n* {roundId} the roundID for which data is being requested",
        "summary": "Web: Transaction detail",
        "tags": [
          "Web"
        ],
        "operationId": "Web:Transactiondetail",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "testId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "agentId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "roundId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/web/transactions/{testId}/{agentId}/{roundId}/{pageNum}.json": {
      "get": {
        "description": "# (Web) Transaction component detail\nReturns HAR (http archive) information, including component list and timing for elements loaded in a transaction test. This is analogous to what is shown in the waterfall view for a page load or transaction test, with an agent selected. Includes response data, dns, connect, ssl, send, wait and receive times for each component loaded in a page.\n\nNote: this endpoint is only available in v5 or higher of the ThousandEyes API.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {testId} the ID of the Transaction test you for wish to retrieve data\n* {agentId} the ID of the agent for which you wish to retrieve data\n* {roundId} the ID of the round for which you wish to retrieve data\n* {pageNum} the page number for the page reached in a transaction. Can be obtained from /web/transactions/{testId}/{agentId}/{roundId} endpoint. Page numbers are zero-indexed.",
        "summary": "Web: Transaction component detail",
        "tags": [
          "Web"
        ],
        "operationId": "Web:Transactioncomponentdetail",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "testId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "agentId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "roundId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "pageNum",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/web/web-transactions/{testId}.json": {
      "get": {
        "description": "# (Web) Web Transactions\nReturns test configuration, and transaction time and errors from each agent selected to run a web transaction. A time frame must be specified, or the current round of data will be returned.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* window=[0-9]+[smhdw]? specifies a window of time for the result set. See Time Ranges for more information.\n* from=YYYY-mm-ddTHH:MM:SS&to=YYYY-mm-ddTHH:MM:SS specifies an explicit start (and optionally, end) for your range of data. See Time Ranges for more information.\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {testId} the ID of the web transaction you wish to retrieve",
        "summary": "Web: Web Transactions",
        "tags": [
          "Web"
        ],
        "operationId": "Web:WebTransactions",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "testId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/web/web-transactions/{testId}/{agentId}/{roundId}.json": {
      "get": {
        "description": "# (Web) Web Transaction detail\nReturns transaction time, marker duration, error counts, and pages transited during the execution of a web transaction. An agentId and roundId is required, since results from a single round of a web transaction execution will be returned.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {testId} the ID of the web transaction you wish to retrieve\n* {agentId} the ID of the agent for which you wish to obtain transaction data\n* {roundId} the roundID for which data is being requested",
        "summary": "Web: Web Transaction detail",
        "tags": [
          "Web"
        ],
        "operationId": "Web:WebTransactiondetail",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "testId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "agentId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "roundId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/web/web-transactions/{testId}/{agentId}/{roundId}/{pageNum}.json": {
      "get": {
        "description": "# (Web) Web Transaction component detail\nReturns HAR (http archive) information, including component list and timing for elements loaded in a web transaction test. This is analogous to what is shown in the waterfall view for a page load or transaction test, with an agent selected. Includes response data, dns, connect, ssl, send, wait and receive times for each component loaded in a page.\n\nNote: this endpoint is only available in v5 or higher of the ThousandEyes API.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {testId} the ID of the Web Transaction test you for wish to retrieve data\n* {agentId} the ID of the agent for which you wish to retrieve data\n* {roundId} the ID of the round for which you wish to retrieve data\n* {pageNum} the page number for the page reached in a transaction. Can be obtained from /web/web-transactions/{testId}/{agentId}/{roundId} endpoint. Page numbers are zero-indexed.",
        "summary": "Web: Web Transaction component detail",
        "tags": [
          "Web"
        ],
        "operationId": "Web:WebTransactioncomponentdetail",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "testId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "agentId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "roundId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "pageNum",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/web/ftp-server/{testId}.json": {
      "get": {
        "description": "# (Web) FTP server\nReturns response code, response and fetch times, as well as component-level (DNS, Connect, Negotiation, Response and Transfer) timing for the load of an object over FTP. FTP tests support plain text FTP, FTPS (FTP over SSL), and SFTP (secure FTP).\n\nNote: this endpoint is only available in API v6 and higher.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* window=[0-9]+[smhdw]? specifies a window of time for the result set. See Time Ranges for more information.\n* from=YYYY-mm-ddTHH:MM:SS&to=YYYY-mm-ddTHH:MM:SS specifies an explicit start (and optionally, end) for your range of data. See Time Ranges for more information.\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {testId} the ID of the HTTP Server (or page load) test you wish to retrieve",
        "summary": "Web: FTP server",
        "tags": [
          "Web"
        ],
        "operationId": "Web:FTPserver",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "testId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/dns/trace/{testId}.json": {
      "get": {
        "description": "# (DNS) Domain trace\nReturns a DNS record from the vantage point of the agent. Similar to dig +trace.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* window=[0-9]+[smhdw]? specifies a window of time for the result set. See Time Ranges for more information.\n* from=YYYY-mm-ddTHH:MM:SS&to=YYYY-mm-ddTHH:MM:SS specifies an explicit start (and optionally, end) for your range of data. See Time Ranges for more information.\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {testId} the ID of the DNS trace test you wish to retrieve.",
        "summary": "DNS: Domain trace",
        "tags": [
          "DNS"
        ],
        "operationId": "DNS:Domaintrace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "testId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/dns/server/{testId}/{serverId}.json": {
      "get": {
        "description": "# (DNS) Server metrics\nReturns the mappings for a DNS record, along with resolution time to each authoritative server, as measured from the vantage point of the agent. Similar to dig @server.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* window=[0-9]+[smhdw]? specifies a window of time for the result set. See Time Ranges for more information.\n* from=YYYY-mm-ddTHH:MM:SS&to=YYYY-mm-ddTHH:MM:SS specifies an explicit start (and optionally, end) for your range of data. See Time Ranges for more information.\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {testId} the ID of the DNS server test you wish to retrieve.",
        "summary": "DNS: Server metrics",
        "tags": [
          "DNS"
        ],
        "operationId": "DNS:Servermetrics",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "testId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "serverId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/dns/dnssec/{testId}.json": {
      "get": {
        "description": "# (DNS) DNSSEC\nReturns the keychain validity for a record on a domain secured using DNSSEC extensions.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* window=[0-9]+[smhdw]? specifies a window of time for the result set. See Time Ranges for more information.\n* from=YYYY-mm-ddTHH:MM:SS&to=YYYY-mm-ddTHH:MM:SS specifies an explicit start (and optionally, end) for your range of data. See Time Ranges for more information.\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {testId} the ID of the DNSSEC test you wish to retrieve.",
        "summary": "DNS: DNSSEC",
        "tags": [
          "DNS"
        ],
        "operationId": "DNS:DNSSEC",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "testId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/dnsp/availability/{testId}.json": {
      "get": {
        "description": "# (DNS+) Availability\nReturns the availability percentage (as measured by the number of vantage points globally which respond with no error) for a domain, aggregated on a country basis.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* window=[0-9]+[smhdw]? specifies a window of time for the result set. See Time Ranges for more information.\n* from=YYYY-mm-ddTHH:MM:SS&to=YYYY-mm-ddTHH:MM:SS specifies an explicit start (and optionally, end) for your range of data. See Time Ranges for more information.\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {testId} (Required) the ID of the DNS+ Domain test you for wish to retrieve data\n* {testId}/{countryId} (Optional) append {countryId} to return results only for that Country. Wildcard \\* is supported, to return a single global aggregate.\n* {testId}/{countryId}/network (Optional) append network to obtain network-level data for a specific country. Wildcard \\* is not supported.",
        "summary": "DNS+: Availability",
        "tags": [
          "DNS"
        ],
        "operationId": "DNS+:Availability",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "testId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/dnsp/mappings/{testId}.json": {
      "get": {
        "description": "# (DNS+) Mappings\nReturns the mapping, and percentage (as measured by the number of vantage points globally which respond with that mapping) for a domain, aggregated on a country basis. Where multiple mappings are detected in a country, each mapping will be shown, along with a corresponding number of vantage points responding with that mapping.\n\n# Optional (Querystring) Parameters\n* format=json|xml (Optional) specifies the format of output requested. See Output Formats for more information\n* window=[0-9]+[smhdw]? (Optional) specifies a window of time for the result set. See Time Ranges for more information.\n* from=YYYY-mm-ddTHH:MM:SS&to=YYYY-mm-ddTHH:MM:SS (Optional) specifies an explicit start (and optionally, end) for your range of data. See Time Ranges for more information.\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {testId} (Required) the ID of the DNS+ Domain test you for wish to retrieve data\n* {testId}/{countryId} (Optional) append {countryId} to return results only for that Country. Wildcard \\* is supported, to return a single global aggregate.\n* {testId}/{countryId}/network (Optional) append network to obtain network-level data for a specific country. Wildcard \\* is not supported.",
        "summary": "DNS+: Mappings",
        "tags": [
          "DNS"
        ],
        "operationId": "DNS+:Mappings",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "testId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/dnsp/resolution-time/{testId}.json": {
      "get": {
        "description": "# (DNS+) Resolution time\nReturns the average resolution time for a domain, aggregated on a country basis.\n\n# Optional (Querystring) Parameters\n* format=json|xml (Optional) specifies the format of output requested. See Output Formats for more information\n* window=[0-9]+[smhdw]? (Optional) specifies a window of time for the result set. See Time Ranges for more information.\n* from=YYYY-mm-ddTHH:MM:SS&to=YYYY-mm-ddTHH:MM:SS (Optional) specifies an explicit start (and optionally, end) for your range of data. See Time Ranges for more information.\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {testId} (Required) the ID of the DNS+ Domain test you for wish to retrieve data\n* {testId}/{countryId} (Optional) append {countryId} to return results only for that Country. Wildcard \\* is supported, to return a single global aggregate.\n* {testId}/{countryId}/network (Optional) append network to obtain network-level data for a specific country. Wildcard \\* is not supported.",
        "summary": "DNS+: Resolution time",
        "tags": [
          "DNS"
        ],
        "operationId": "DNS+:Resolutiontime",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "testId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/dnsp/server-latency/{testId}.json": {
      "get": {
        "description": "# (DNS+) Server latency\nReturns the server latency metrics from a global perspective for a specific nameserver, aggregated on a country basis.\n\n# Optional (Querystring) Parameters\n* format=json|xml (Optional) specifies the format of output requested. See Output Formats for more information\n* window=[0-9]+[smhdw]? (Optional) specifies a window of time for the result set. See Time Ranges for more information.\n* from=YYYY-mm-ddTHH:MM:SS&to=YYYY-mm-ddTHH:MM:SS (Optional) specifies an explicit start (and optionally, end) for your range of data. See Time Ranges for more information.\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {testId} (Required) the ID of the DNS+ Domain test you for wish to retrieve data\n* {testId}/{countryId} (Optional) append {countryId} to return results only for that Country. Wildcard \\* is supported, to return a single global aggregate.\n* {testId}/{countryId}/network (Optional) append network to obtain network-level data for a specific country. Wildcard \\* is not supported.",
        "summary": "DNS+: Server latency",
        "tags": [
          "DNS"
        ],
        "operationId": "DNS+:Serverlatency",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "testId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/voice/sip-server/{testId}.json": {
      "get": {
        "description": "# (Voice) SIP server\nReturns voice SIP server metrics (response, invite, register time) from each agent, for each roundId in the requested window. A time frame must be specified, or the current round of data will be returned.\n\n# Optional (Querystring) Parameters\n* format=json|xml (Optional) specifies the format of output requested. See Output Formats for more information\n* window=[0-9]+[smhdw]? (Optional) specifies a window of time for the result set. See Time Ranges for more information.\n* from=YYYY-mm-ddTHH:MM:SS&to=YYYY-mm-ddTHH:MM:SS (Optional) specifies an explicit start (and optionally, end) for your range of data. See Time Ranges for more information.\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {testId} (Required) the ID of the SIP Server test for which you wish to retrieve data",
        "summary": "Voice: SIP server",
        "tags": [
          "SIP"
        ],
        "operationId": "Voice:SIPserver",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "testId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/voice/rtp-stream/{testId}.json": {
      "get": {
        "description": "# (Voice) RTP stream\nReturns voice RTP stream metrics (loss, latency, jitter, MOS score) from each agent, for each roundId in the requested window. A time frame must be specified, or the current round of data will be returned.\n\n# Optional (Querystring) Parameters\n* format=json|xml (Optional) specifies the format of output requested. See Output Formats for more information\n* window=[0-9]+[smhdw]? (Optional) specifies a window of time for the result set. See Time Ranges for more information.\n* from=YYYY-mm-ddTHH:MM:SS&to=YYYY-mm-ddTHH:MM:SS (Optional) specifies an explicit start (and optionally, end) for your range of data. See Time Ranges for more information.\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {testId} (Required) the ID of the RTP Stream test for which you wish to retrieve data",
        "summary": "Voice: RTP stream",
        "tags": [
          "SIP"
        ],
        "operationId": "Voice:RTPstream",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "testId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/credentials.json": {
      "get": {
        "description": "# GET /v6/credentialsCredential list\nReturns a list of all credentials configured in ThousandEyes.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information.",
        "summary": "Credential list",
        "tags": [
          "Credentials"
        ],
        "operationId": "Credentiallist",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/credentials/{credentialId}.json": {
      "get": {
        "description": "# Credential details\nReturns details for a credential, including test name, reference & value (value is only visible if the user has View sensitive data in web transaction permission). The user should have access to this credential by sharing the same account and must have the View tests permission.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information.",
        "summary": "Credential details",
        "tags": [
          "Credentials"
        ],
        "operationId": "Credentialdetails",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "credentialId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/credentials/new.json": {
      "post": {
        "description": "# Creating a credential\nCreates a new credential in ThousandEyes, based on properties provided in the POST data. In order to create a new credential, the user attempting the creation must have permission to create tests.\n\n# Optional (Querystring) Parameters\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information.\n\n# Request\nRequest body should contain both a name and value to be set during creation.\n* name\tstring\tThe name of the credential\n* value\tstring\tThe value of the credential that will be encrypted (if the user has permission to read sensitive data)",
        "summary": "Creating a credential",
        "tags": [
          "Credentials"
        ],
        "operationId": "Creatingacredential",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreatingacredentialRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/credentials/{credentialId}/update.json": {
      "post": {
        "description": "# Updating a credential\nUpdates a credential in ThousandEyes, based on properties provided in the POST data. In order to update a credential, the user attempting the creation must have permission to update tests & should have access to the credential (same account)\n\n# Optional (Querystring) Parameters\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information.\n\n# Request\n* {credentialId} corresponds to the unique ID of the credential to be updated, obtained through the /credentials endpoint\n* Request body should contain fields to be set during update.\n  * name\tstring\tThe name of the credential\n  * value\tstring\tThe value of the credential that will be encrypted (if the user has permission to read sensitive data)",
        "summary": "Updating a credential",
        "tags": [
          "Credentials"
        ],
        "operationId": "Updatingacredential",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdatingacredentialRequest"
            }
          },
          {
            "name": "credentialId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/credentials/{credentialId}/delete.json": {
      "post": {
        "description": "# Deleting a credential\nDeletes the specified credential in ThousandEyes, based on the credentialID provided in the API request.\n\n# Optional (Querystring) Parameters\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information.",
        "summary": "Deleting a credential",
        "tags": [
          "Credentials"
        ],
        "operationId": "Deletingacredential",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "credentialId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/endpoint-agents.json": {
      "get": {
        "description": "# Listing all agents\nReturns a list of all endpoint agents in a given account group.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n* deleted=true|false specifies if deleted agents should be returned too. By default it is false - only non-deleted agents are returned\n* agentName={agent_name} returns only agents with a given name\n* computerName={computer_name} returns only agents with a given computer name",
        "summary": "Listing all agents",
        "tags": [
          "Endpoint Agents"
        ],
        "operationId": "Listingallagents",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/endpoint-agents/{agentId}.json": {
      "get": {
        "description": "# Getting an agent by id\nReturns information about the agent with a given id.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\nRequest\n* {agent_id} corresponds the unique ID of an endpoint agent, obtained from the /endpoint-agents endpoint",
        "summary": "Getting an agent by id",
        "tags": [
          "Endpoint Agents"
        ],
        "operationId": "Gettinganagentbyid",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "agentId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      },
      "post": {
        "description": "# Updating an agent\nUpdates a given agent with a new name.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {agent_id} corresponds the unique ID of an endpoint agent, obtained from the /endpoint-agents endpoint",
        "summary": "Updating an agent",
        "tags": [
          "Endpoint Agents"
        ],
        "operationId": "Updatinganagent",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdatinganagentRequest"
            }
          },
          {
            "name": "agentId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/endpoint-agents/{agentId}/enable.json": {
      "post": {
        "description": "# Enabling an agent\nEnables an agent with a given id.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {agent_id} corresponds the unique ID of an endpoint agent, obtained from the /endpoint-agents endpoint",
        "summary": "Enabling an agent",
        "tags": [
          "Endpoint Agents"
        ],
        "operationId": "Enablinganagent",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "agentId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/endpoint-agents/{agentId}/disable.json": {
      "post": {
        "description": "# Disabling an agent\nDisables an agent with a given id.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {agent_id} corresponds the unique ID of an endpoint agent, obtained from the /endpoint-agents endpoint",
        "summary": "Disabling an agent",
        "tags": [
          "Endpoint Agents"
        ],
        "operationId": "Disablinganagent",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "agentId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/endpoint-agents/transfer.json": {
      "post": {
        "description": "# Transferring an agent\nTriggers a process of transferring a list of agents.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n\n# Request\nThe request‚Äôs body should contain a list of agents in CSV format with the following columns (comma delimited):\n* ‚Äúmachine_id‚Äù - agent id to be transferred\n* ‚Äúfrom_aid‚Äù - account id where the agent needs to be transferred from\n* ‚Äúto_aid‚Äù - account id where the agent needs to be transferred to",
        "summary": "Transferring an agent",
        "tags": [
          "Endpoint Agents"
        ],
        "operationId": "Transferringanagent",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "example": "machine_id,from_aid,to_aid\n5d0764ac-7e42-4ec8-a0d4-39fc53edccba,111,222\n5d0764ac-7e42-4ec8-a0d4-39fc53edccba,333,222",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/endpoint-data/user-sessions.json": {
      "get": {
        "description": "# Endpoint user session list\nReturns a list of all endpoint user sessions. Sessions from the last round are provided unless an explicit start and end is provided with from, to or window optional parameters.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* window=[0-9]+[smhdw]? specifies a window of time for the result set. See Time Ranges for more information.\n* from=YYYY-mm-ddTHH:MM:SS&to=YYYY-mm-ddTHH:MM:SS specifies an explicit start (and optionally, end) for your range of data. See Time Ranges for more information.\n* page={pageNo} specifies result page. See Pagination for more information.\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Optional Filtering\n/endpoint-data endpoints support optional filtering. See Endpoint Data Filtering for more information.",
        "summary": "Endpoint user session list",
        "tags": [
          "Endpoint Data"
        ],
        "operationId": "Endpointusersessionlist",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "window",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/endpoint-data/user-sessions/{sessionId}.json": {
      "get": {
        "description": "# Endpoint user session details\nReturns details for an endpoint user session\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {sessionId} corresponds to the id of a endpoint user sessions, see the Endpoint user session list endpoint for a listing of endpoint user sessions.",
        "summary": "Endpoint user session details",
        "tags": [
          "Endpoint Data"
        ],
        "operationId": "Endpointusersessiondetails",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "window",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "sessionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/endpoint-data/user-sessions/web.json": {
      "get": {
        "description": "# Endpoint web pages list\nReturns a list of all endpoint web sessions. Sessions from the last round are provided unless an explicit start and end is provided with from, to or window optional parameters.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* window=[0-9]+[smhdw]? specifies a window of time for the result set. See Time Ranges for more information.\n* from=YYYY-mm-ddTHH:MM:SS&to=YYYY-mm-ddTHH:MM:SS specifies an explicit start (and optionally, end) for your range of data. See Time Ranges for more information.\n* page={pageNo} specifies result page. See Pagination for more information.\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Optional Filtering\n/endpoint-data endpoints support optional filtering. See Endpoint Data Filtering for more information.",
        "summary": "Endpoint web pages list",
        "tags": [
          "Endpoint Data"
        ],
        "operationId": "Endpointwebpageslist",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "window",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/endpoint-data/user-sessions/{sessionId}/page/{pageId}.json": {
      "get": {
        "description": "# Endpoint web page details\nReturns details for endpoint user session web page request. Provides complete waterfall information with all object requests.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {sessionId} corresponds to the id of a endpoint user sessions, see the Endpoint user session list endpoint for a listing of endpoint user sessions.\n* {pageId} corresponds to the id of a web page, see the Endpoint user session details endpoint for a listing of web pages.",
        "summary": "Endpoint web page details",
        "tags": [
          "Endpoint Data"
        ],
        "operationId": "Endpointwebpagedetails",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "sessionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "pageId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/endpoint-data/user-sessions/network.json": {
      "get": {
        "description": "# Endpoint network sessions list\nReturns a list of all endpoint network sessions. Sessions from the last round are provided unless an explicit start and end is provided with from, to or window optional parameters.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* window=[0-9]+[smhdw]? specifies a window of time for the result set. See Time Ranges for more information.\n* from=YYYY-mm-ddTHH:MM:SS&to=YYYY-mm-ddTHH:MM:SS specifies an explicit start (and optionally, end) for your range of data. See Time Ranges for more information.\n* page={pageNo} specifies result page. See Pagination for more information.\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Optional Filtering\n/endpoint-data endpoints support optional filtering. See Endpoint Data Filtering for more information.",
        "summary": "Endpoint network sessions list",
        "tags": [
          "Endpoint Data"
        ],
        "operationId": "Endpointnetworksessionslist",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "window",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/endpoint-data/network-topology.json": {
      "get": {
        "description": "# Endpoint network topology list\nReturns a list of all endpoint network topology results. Results from the last round are provided unless an explicit start and end is provided with from, to or window optional parameters.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* window=[0-9]+[smhdw]? specifies a window of time for the result set. See Time Ranges for more information.\n* from=YYYY-mm-ddTHH:MM:SS&to=YYYY-mm-ddTHH:MM:SS specifies an explicit start (and optionally, end) for your range of data. See Time Ranges for more information.\n* page={pageNo} specifies result page. See Pagination for more information.\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\nWarning\nNote that a maximum of 12h worth of data can be retreived at once. If you need more, you need to make multiple requests.\n\n# Optional Filtering\n/endpoint-data endpoints support optional filtering. See Endpoint Data Filtering for more information.",
        "summary": "Endpoint network topology list",
        "tags": [
          "Endpoint Data"
        ],
        "operationId": "Endpointnetworktopologylist",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "window",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/endpoint-data/network-topology/{networkProbeId}.json": {
      "get": {
        "description": "# Endpoint network topology details\nReturns details for a network topology probe\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {networkProbeId} corresponds to the id of a network probe, see the Endpoint network topology list endpoint for a listing of network probes.",
        "summary": "Endpoint network topology details",
        "tags": [
          "Endpoint Data"
        ],
        "operationId": "Endpointnetworktopologydetails",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "window",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "networkProbeId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/endpoint-data/networks.json": {
      "get": {
        "description": "# Endpoint networks\nReturns a list of all the networks from which endpoint agents performed user sessions.\n\n# Optional (Querystring) Parameters\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information",
        "summary": "Endpoint networks",
        "tags": [
          "Endpoint Data"
        ],
        "operationId": "Endpointnetworks",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/endpoint-tests.json": {
      "get": {
        "description": "# Endpoint scheduled test list\nReturns a list of all endpoint scheduled tests configured in ThousandEyes. This list does not contain saved events.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information",
        "summary": "Endpoint scheduled test list",
        "tags": [
          "Endpoint Scheduled Tests"
        ],
        "operationId": "Endpointscheduledtestlist",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/endpoint-tests/{testType}.json": {
      "get": {
        "description": "# Endpoint scheduled test list by type\nReturns a list of all endpoint scheduled tests of the type specified, configured in ThousandEyes. The list does not contain saved events.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {testType} corresponds to any of the following options:\n  * agent-to-server\n  * http-server",
        "summary": "Endpoint scheduled test list by type",
        "tags": [
          "Endpoint Scheduled Tests"
        ],
        "operationId": "Endpointscheduledtestlistbytype",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "testType",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/endpoint-tests/{testId}.json": {
      "get": {
        "description": "# Endpoint scheduled test details\nReturns details for an endpoint scheduled test, including test type, name, intervals, targets and alert rules.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {testId} the ID of the endpoint scheduled test you wish to retrieve",
        "summary": "Endpoint scheduled test details",
        "tags": [
          "Endpoint Scheduled Tests"
        ],
        "operationId": "Endpointscheduledtestdetails",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "testId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/endpoint-tests/{testType}/new.json": {
      "post": {
        "description": "# Creating an Endpoint Test\nCreates a new Endpoint test in ThousandEyes, based on properties provided in the POST data. In order to create a new test, the user attempting the creation must be an Account Admin.\n\nRegular users are blocked from using any of the POST-based methods.\n\n# Request\n* {testType} corresponds to any of the following options:\n  * agent-to-server - endpoint network test\n  * http-server - endpoint http test\n* Request body should contain fields to be set during creation.",
        "summary": "Creating an Endpoint Test",
        "tags": [
          "Endpoint Scheduled Tests"
        ],
        "operationId": "CreatinganEndpointTest",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreatinganEndpointTestRequest"
            }
          },
          {
            "name": "testType",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/endpoint-data/tests/net/metrics/{testId}.json": {
      "get": {
        "description": "# (Network) End-to-End metrics\nReturns network metrics (loss, latency, jitter and bandwidth) from each endpoint agent, for each roundId in the requested window. A time frame must be specified, or the most recent round within last 2 hours will be returned.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* window=[0-9]+[smhdw]? specifies a window of time for the result set. See Time Ranges for more information.\n* from=YYYY-mm-ddTHH:MM:SS&to=YYYY-mm-ddTHH:MM:SS specifies an explicit start (and optionally, end) for your range of data. See Time Ranges for more information.\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {testId} the ID of the endpoint scheduled test you wish to retrieve",
        "summary": "Network: End-to-End metrics",
        "tags": [
          "Endpoint Scheduled Test Data"
        ],
        "operationId": "Network:End-to-Endmetrics",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "testId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/endpoint-data/tests/net/path-vis/{testId}.json": {
      "get": {
        "description": "# (Network) Path visualization\nReturns a summary of the path visualization data collected from each endpoint agent to the destination. In each path visualization attempt, one attempt is made to reach the destination. Each set of data is summarized, based on response time, number of hops, and response time to the target. A time frame must be specified, or the most recent round within last 2 hours will be returned.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* window=[0-9]+[smhdw]? specifies a window of time for the result set. See Time Ranges for more information.\n* from=YYYY-mm-ddTHH:MM:SS&to=YYYY-mm-ddTHH:MM:SS specifies an explicit start (and optionally, end) for your range of data. See Time Ranges for more information.\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {testId} the ID of the test you wish to retrieve",
        "summary": "Network: Path visualization",
        "tags": [
          "Endpoint Scheduled Test Data"
        ],
        "operationId": "GetNetwork:Pathvisualization",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "testId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/endpoint-data/tests/net/path-vis/{testId}/{agentId}/{roundId}.json": {
      "get": {
        "description": "# (Network) Detailed path trace\nReturns a hop-by-hop summary of the path trace data collected during path visualization. In each round, one path discovery attempt is made to reach the destination. The entire path is returned. A roundId must be specified.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\nRequired parameters:\n* {testId} the ID of the test you wish to retrieve\n* {agentId} the ID of the endpoint agent from which you wish to obtain data\n* {roundId} the round ID for which you wish to obtain data. Equals the beginning of the testing round, in epoch time format.",
        "summary": "Network: Detailed path trace",
        "tags": [
          "Endpoint Scheduled Test Data"
        ],
        "operationId": "GetNetwork:Detailedpathtrace",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "testId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "agentId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "roundId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/endpoint-data/tests/web/http-server/{testId}.json": {
      "get": {
        "description": "# (Web) HTTP server\nReturns response code and response times, as well as component-level (DNS, Connect, Wait and Receive) timing for the load of an object over HTTP.\n\n# ptional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* window=[0-9]+[smhdw]? specifies a window of time for the result set. See Time Ranges for more information.\n* from=YYYY-mm-ddTHH:MM:SS&to=YYYY-mm-ddTHH:MM:SS specifies an explicit start (and optionally, end) for your range of data. See Time Ranges for more information.\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {testId} the ID of the HTTP Server (or page load) test you wish to retrieve",
        "summary": "Web: HTTP server",
        "tags": [
          "Endpoint Scheduled Test Data"
        ],
        "operationId": "GetWeb:HTTPserver",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "testId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/endpoint-instant/{testType}.json": {
      "post": {
        "description": "# Creating instant test\nCreates and runs a new Endpoint Instant test in ThousandEyes, based on properties provided in the POST data. In order to create and run an Instant test, the user attempting the creation must have Edit endpoint tests permission.\n\n# Request\n* {testType} corresponds to any of the following options:\n  * agent-to-server - endpoint network test\n  * http-server - endpoint http test\n* Request body should contain fields to be set during creation.",
        "summary": "Creating instant test",
        "tags": [
          "Endpoint Instant Tests"
        ],
        "operationId": "Creatinginstanttest",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreatinginstanttestRequest"
            }
          },
          {
            "name": "testType",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/endpoint-instant/{testId}/rerun.json": {
      "post": {
        "description": "# Rerunning instant test\nReruns an existing Endpoint Instant test in ThousandEyes. In order to rerun an Instant test, the user attempting this must have Edit endpoint tests permission.\n\n# Request\n* {testId} the ID of the Instant test you wish to rerun.",
        "summary": "Rerunning instant test",
        "tags": [
          "Endpoint Instant Tests"
        ],
        "operationId": "Rerunninginstanttest",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "testId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/snapshot.json": {
      "post": {
        "description": "# Create a new snapshot\nCreates a new snapshot in ThousandEyes, based on properties provided in the POST data. This endpoint requires the Create snapshot shares permission be assigned to the role of the user accessing this endpoint.\n\nRegular users are blocked from using any of the POST-based methods.\n\nImportant notes related to snapshot creation using this endpoint:\n* There is a creation limit of 100 snapshots per Organization per day.\n* Snapshots created using this endpoint will expire after 30 days.\n* The time range specified with from and to must be one of the following: 1, 2, 4, 6, 12, 24, 48, 96 hours.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* request body containing the following fields:\n  * displayName\tstring\tRequired\tn/a\tTitle of the snapshot\n  * from\tdateTime\tRequired\tyyyy-MM-dd hh:mm:ss\tThe date/time when the snapshot will start\n  * isPublic\tinteger\tOptional\tn/a\t0 for saved event, 1 for share link. Defaults to 0\n  * testId\tinteger\tRequired\tn/a\tThe ID of the test you wish to create a snapshot\n  * to\tdateTime\tRequired\tyyyy-MM-dd hh:mm:ss\tThe date/time when the snapshot will end",
        "summary": "Create a new snapshot",
        "tags": [
          "Snapshots"
        ],
        "operationId": "Createanewsnapshot",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "example": "{\n\t\"testId\": {{testId}},\n\t\"displayName\": \"Postman Snapshot created through API\",\n\t\"from\": \"2021-01-01T00:00:00\",\n\t\"to\": \"2021-01-01T01:00:00\",\n\t\"isPublic\": 1\n}",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/agents/{agentId}/add-to-cluster.json": {
      "post": {
        "description": "# Agent cluster - Creating\nConverts a standalone Enterprise Agent (or multiple) to an Enterprise Agent cluster.\n\nThis endpoint can only be used by users with the Edit agents in account group permission.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {agentId} in the request URL corresponds to the unique ID of an Enterprise Agent that is being converted to a cluster\nRequest notes:\n* {agentId} can be obtained from the /v6/agents endpoint\n# POST Data\n* The {agentId} present in the request URL must not be present in the POST body\n* Each {agentId} must represent an agent of the Enterprise type (as shown by the agentType field in agent details)",
        "summary": "Creating (single agent)",
        "tags": [
          "Agent cluster"
        ],
        "operationId": "Creating(singleagent)",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "example": [],
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "agentId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/agents/{agentId}/remove-from-cluster.json": {
      "post": {
        "description": "# Agent cluster - Removing members\nRemoves a member (or multiple members) from an Enterprise Agent cluster.\n\nThis endpoint can only be used for Enterprise Agent clusters, and only by users with the Edit agents in account group permission.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {agentId} in the request URL corresponds to the unique ID of an Enterprise Agent cluster from which agent(s) will being removed.\n\n# Request notes:\n* {agentId} can be obtained from the /v6/agents endpoint\n\n# POST Data\n* One or multiple (comma-separated) memberId values representing agents that should be removed from the cluster, enclosed in square brackets.\n* Cluster member IDs can be obtained from the /v6/agents API endpoint (the memberId field inside the clusterMembers array).",
        "summary": "Removing members (single agent)",
        "tags": [
          "Agent cluster"
        ],
        "operationId": "Removingmembers(singleagent)",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "example": [
                80001
              ],
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "agentId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/agents.json": {
      "get": {
        "description": "# Agent list\nReturns a list of all agents available to your account in ThousandEyes, including both Enterprise and Cloud agents.\n\n# Optional (Querystring) Parameters\n* agentTypes=CLOUD|ENTERPRISE|ENTERPRISE_CLUSTER optional, specifies the type of agents requested. Accepts either a single allowed value or a comma-separated list of allowed values\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information",
        "summary": "Agent list",
        "tags": [
          "Agents & Monitors"
        ],
        "operationId": "Agentlist",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/agents/{agentId}.json": {
      "get": {
        "description": "# Agent detail\nReturns details for an agent, including assigned tests. Enterprise agents show utilization data and assigned accounts.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information",
        "summary": "Agent detail",
        "tags": [
          "Agents & Monitors"
        ],
        "operationId": "Agentdetail",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "agentId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/agents/{agentId}/update.json": {
      "post": {
        "description": "# Updating an agent\nUpdates Enterprise Agent details. Users can update the agent parameters specified under Post Data section.\n\nThis endpoint can only be used for Enterprise Agents, and only for users in a role that permits modification of Enterprise Agents.\n\nImportant notes related to agent modification on tests:\n* If an agent is removed from a test, the modification date for tests using that agent at the time it was removed will be changed.\n* If an agent is removed from an entire account group, then all tests using this agent in the removed account group will be updated to reflect the removed agent.\n* If a removed agent is the final remaining agent on a test, then the test will be disabled when the agent is removed.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {agentId} corresponds the unique ID of an enterprise agent, obtained from the /agents endpoint\n\n# Post Data\nWhen POSTing data to the /agents/{agentId}/update endpoint, users can update the following fields:\n  * agentName string representation of an agent. No two agents can have the same display name.\n  * enabled boolean representation of agent state. 0 to disable the agent, 1 to enable the agent.\n  * accountGroups an array of accountGroup objects containing only an aid value, in the format { aid: integer }. See /accounts to pull a list of account IDs\n  * tests an array of test objects containing only a testId value in the format { testId: integer }. See /tests to pull a list of tests available in the current account context.\n  * ipv6Policy string representation of the IP version policy. Can be FORCE_IPV4, PREFER_IPV6 or FORCE_IPV6.\n  * verifySslCertificates boolean representation of Verify SSL certificates state. 0 to disable, 1 to enable.\n  * keepBrowserCache boolean representation of Keep browser cache state. 0 to disable, 1 to enable.\n  * targetForTests string representation of target IP address or domain name, representing test destination when agent is acting as a test target in an agent-to-agent test",
        "summary": "Updating an agent",
        "tags": [
          "Agents & Monitors"
        ],
        "operationId": "PostUpdatinganagent",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "example": "{\n    \"agentName\": \"Postman DevNet agent name updatedd\",\n    \"accountGroups\": [\n      {\"aid\": 315},\n      {\"aid\": 362}\n    ],\n    \"tests\": [\n      {\"testId\": 12065}\n      {\"testId\": 817},\n    ],\n    \"targetForTests\":\"1.2.3.4\"\n  }",
              "type": "string"
            }
          },
          {
            "name": "agentId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/agents/{agentId}/delete.json": {
      "post": {
        "description": "# Deleting an Agent\nDeletes an Enterprise Agent from ThousandEyes. Note: this feature can only be used on Enterprise Agents.\n\nImportant notes related to agent removal:\n* If an agent is deleted, the modification date for tests using that agent at the time it was deleted will be changed.\n* If a deleted agent is the final remaining agent on a test, then the test will be disabled when the agent is removed.\n\nImportant note: if an agent is removed, it must be re-initialized to use the same machine again in different context. Virtual Appliances can be updated using the Reset State button in the Advanced tab of the agent management interface. Users running packaged versions of Linux will need to remove /var/lib/te-agent/\\*.sqlite in order to reinitialize an agent.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {agentId} corresponds the unique ID of an enterprise agent, obtained from the /agents endpoint",
        "summary": "Deleting an Agent",
        "tags": [
          "Agents & Monitors"
        ],
        "operationId": "DeletinganAgent",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "agentId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/bgp-monitors.json": {
      "get": {
        "description": "# BGP Monitor list\nReturns a list of all BGP monitors available to your account in ThousandEyes, including both public and private feeds.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information",
        "summary": "BGP Monitor list",
        "tags": [
          "Agents & Monitors"
        ],
        "operationId": "BGPMonitorlist",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/agent-notification-rules.json": {
      "get": {
        "description": "# Agent Notification Rules\nReturns a list of all agent notification rules configured under your account in ThousandEyes.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information",
        "summary": "Agent Notification Rules",
        "tags": [
          "Agents & Monitors"
        ],
        "operationId": "AgentNotificationRules",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/agent-notification-rules/{ruleId}.json": {
      "get": {
        "description": "# Agent Notification Rule Detail\nReturns details of an agent notification rule, including agents it is assigned to.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information",
        "summary": "Agent Notification Rule Detail",
        "tags": [
          "Agents & Monitors"
        ],
        "operationId": "AgentNotificationRuleDetail",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "ruleId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/alerts.json": {
      "get": {
        "description": "# Active alerts\nReturns a list of all active alerts, active at any given time.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* window=[0-9]+[smhdw]? specifies a window of time for the result set. See Time Ranges for more information.\n* from=YYYY-mm-ddTHH:MM:SS&to=YYYY-mm-ddTHH:MM:SS specifies an explicit start (and optionally, end) for your range of data. See Time Ranges for more information.\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information",
        "summary": "Active alerts",
        "tags": [
          "Alerts & Notifications"
        ],
        "operationId": "Activealerts",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/alerts/{alertId}.json": {
      "get": {
        "description": "# Alert detail\nReturns details about an alert.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information",
        "summary": "Alert detail",
        "tags": [
          "Alerts & Notifications"
        ],
        "operationId": "Alertdetail",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "alertId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/alert-rules.json": {
      "get": {
        "description": "# Alert rules\nReturns a list of all alert rules configured under your account in ThousandEyes.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information",
        "summary": "Alert rules",
        "tags": [
          "Alerts & Notifications"
        ],
        "operationId": "Alertrules",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/alert-rules/{ruleId}.json": {
      "get": {
        "description": "# Alert rule detail\nReturns details about an alert rule.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information",
        "summary": "Alert rule detail",
        "tags": [
          "Alerts & Notifications"
        ],
        "operationId": "Alertruledetail",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "ruleId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/alert-rules/new.json": {
      "post": {
        "description": "# Creating an alert rule\nCreates a new alert rule in your account, based on properties provided in the POST data. In order to create a new alert rule, the user attempting the creation must be in a role that has the Edit alert rules permission. Users without this permission will receive an error.\n\nNote: when assigning any alert rule to a test (which can be done as part of the creation activity), the user must be in a role that has the Edit tests permission.\n\n# Optional (Querystring) Parameters\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* request body must contain fields to be set during creation. See the Alert Rule Metadata page for fields available during alert rule creation.",
        "summary": "Creating an alert rule",
        "tags": [
          "Alerts & Notifications"
        ],
        "operationId": "Creatinganalertrule",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "example": "{\n\t\"alertType\": \"FTP\",\n\t\"default\": 0,\n\t\"expression\": \"((reachability < 90%))\",\n\t\"minimumSources\": 10,\n\t\"notes\": \"FTP Alert rule created using write api\",\n\t\"description\": \"TE FTP Alert rule with write api\",\n\t\"notifications\": {\n\t\t\"email\": {\n\t\t\t\"message\": \"\",\n\t\t\t\"recipient\": [\n\t\t\t\t\"postman+devnet@cisco.com\"\n\t\t\t]\n\t\t},\n\t\t\"thirdParty\": [{\n\t\t\t\"integrationId\": \"sl-101\",\n\t\t\t\"integrationType\": \"SLACK\"\n\t\t}],\n\t\t\"webhook\": [{\n\t\t\t\"integrationId\": \"wb-201\",\n\t\t\t\"integrationType\": \"WEBHOOK\"\n\t\t}]\n\t},\n\t\"notifyOnClear\": 1,\n\t\"roundsViolatingOutOf\": 10,\n\t\"roundsViolatingRequired\": 10,\n\t\"roundsViolatingMode\": \"ANY\",\n\t\"ruleName\": \"Postman DevNet FTP Alert Rule\",\n\t\"sourceMeasure\": \"percent\",\n\t\"testIds\": [\n\t\t{{testId}}\n\t]\n}",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/alert-rules/{ruleId}/update.json": {
      "post": {
        "description": "# Updating an alert rule\nModifies an existing alert rule in your account, based on properties provided in the POST data. In order to modify an alert rule, the user attempting the creation must be in a role that has the Edit alert rules permission. Users without this permission will receive an error.\n\nNote: when assigning any alert rule to a test (which can be done as part of the update activity), the user must be in a role that has the Edit tests permission.\n\n# Optional (Querystring) Parameters\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {ruleId} corresponds to a ruleId returned by the /alert-rules endpoint.\n* request body must contain a full list of fields. It is recommended to make a request to the alert-rules/{ruleId} endpoint and modify the conditions of the alert rule based on fields returned in that request. See the Alert Rule Metadata page for fields available during alert rule modification.",
        "summary": "Updating an alert rule",
        "tags": [
          "Alerts & Notifications"
        ],
        "operationId": "Updatinganalertrule",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdatinganalertruleRequest"
            }
          },
          {
            "name": "ruleId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/alert-rules/{ruleId}/delete.json": {
      "post": {
        "description": "# Deleting an alert rule\nDeletes an alert rule in your account. In order to delete an alert rule, the user attempting the creation must be in a role that has the Edit alert rules permission, as well as Edit Tests permission, in the event that the alert rule is assigned to any tests. Users without appropriate permissions will receive an error.\n\n# Optional (Querystring) Parameters\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {ruleId} corresponds to a ruleId returned by the /alert-rules endpoint.",
        "summary": "Deleting an alert rule",
        "tags": [
          "Alerts & Notifications"
        ],
        "operationId": "Deletinganalertrule",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "ruleId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/integrations.json": {
      "get": {
        "description": "# Alert notification integrations\nReturns a list of all alert notification integrations (webhooks, PagerDuty, Slack, ‚Ä¶)\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information",
        "summary": "Alert notification integrations",
        "tags": [
          "Alerts & Notifications"
        ],
        "operationId": "Alertnotificationintegrations",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/alert-suppression-windows.json": {
      "get": {
        "description": "# Alert suppression windows\nReturns a list of all alert suppression windows configured in your account group.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information",
        "summary": "Alert suppression windows",
        "tags": [
          "Alerts & Notifications"
        ],
        "operationId": "Alertsuppressionwindows",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/alert-suppression-windows/{alertSuppressionWindowId}.json": {
      "get": {
        "description": "# Alert suppression window detail\nReturns details for an alert suppression window configured in your account group.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {alertSuppressionWindowId} corresponds to the id of an alertSuppressionWindow, see the alert suppression window list endpoint for a listing of alert suppression windows.",
        "summary": "Alert suppression window detail",
        "tags": [
          "Alerts & Notifications"
        ],
        "operationId": "Alertsuppressionwindowdetail",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "alertSuppressionWindowId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/alert-suppression-windows/new.json": {
      "post": {
        "description": "# Creating an alert suppression window\nCreates a new alert suppression window in ThousandEyes, based on properties provided in the POST data. In order to create a new alert suppression window, the user attempting the creation must be an Account Admin.\n\nRegular users are blocked from using any of the POST-based methods.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* request body containing the following fields:\n * alertSuppressionWindowName\tstring\t\tname of the alert suppression window\n * enabled\tbit\t\t0 for disabled, 1 for enabled\n * tests\tarray of {‚ÄútestId‚Äù: testId} objects\t\tList of tests assigned to the alert suppression window: [{‚ÄútestId‚Äù: 123}, {‚ÄútestId‚Äù: 456}]\n * startDateTime\tdateTime\tyyyy-MM-dd hh:mm:ss\tthe date/time when the alert suppression window will start.\n * timezone\tstring\t\ttimezone name, in Area/Location format, as specified in the IANA TZDB.\n * duration\tinteger\tseconds\tnumber of seconds for which the suppression window will be active\n * repeat\trepeat object\t\tsee repeat options found below\n * repeat.type\tstring\t\t[DAY, WEEK, MONTH, CUSTOM]\n * repeat.intervalType\tstring\t\t[DAY, WEEK, MONTH]\n * repeat.intervalLength\tinteger\t\tnumber of intervalTypes to wait before reactivating the alert suppression window.\n * repeat.daysOfWeek\tstring\t\tSpecify which day of the week the alert suppression window needs to be activated for. Only valid for intervalType = WEEK. [SUN, MON, TUE, WED, THU, FRI, SAT]\n * endRepeat\trepeat object\t\tsee endRepeat options found below\n * endRepeat.type\tstring\t\t[COUNT, NEVER, DATE]\n * endRepeat.count\tinteger\t\tend repeat after number of occurrences (only valid with COUNT type option)\n * endRepeat.date\tdate\tyyyy-MM-dd\tend repeat after specific date (only valid with DATE type option)",
        "summary": "Creating an alert suppression window",
        "tags": [
          "Alerts & Notifications"
        ],
        "operationId": "Creatinganalertsuppressionwindow",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreatinganalertsuppressionwindowRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/alert-suppression-windows/{alertSuppressionWindowId}/update.json": {
      "post": {
        "description": "# Updating an alert suppression window\nUpdates an alert suppression window in ThousandEyes, based on properties provided in the POST data. In order to modify an alert suppression window, the user attempting the update must be an Account Admin.\n\nRegular users are blocked from using any of the POST-based methods.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {alertSuppressionWindowId} corresponds to the id of an alertSuppressionWindow, see the alert suppression window list endpoint for a listing of alert suppression windows.\n* Request body containing the following fields\n  * alertSuppressionWindowName\tstring\t\tname of the alert suppression window\n  * enabled\tbit\tn/a\t0 for disabled, 1 for enabled\n  * tests\tarray of {‚ÄútestId‚Äù: testId} objects\t\tList of tests assigned to the alert suppression window: [{‚ÄútestId‚Äù: 123}, {‚ÄútestId‚Äù: 456}]\n  * startDateTime\tdateTime\tyyyy-MM-dd hh:mm:ss\tthe date/time when the alert suppression window will start.\n  * timezone\tstring\t\ttimezone name, in Area/Location format, as specified in the IANA TZDB.\n  * duration\tinteger\tseconds\tnumber of seconds for which the suppression window will be active\n  * repeat\trepeat object\t\tsee repeat options found below\n  * repeat.type\tstring\t\t[DAY, WEEK, MONTH, CUSTOM]\n  * repeat.intervalType\tstring\tn/a\t[DAY, WEEK, MONTH]\n  * repeat.intervalLength\tinteger\tn/a\tnumber of intervalTypes to wait before reactivating the alert suppression window.\n  * repeat.daysOfWeek\tstring\tn/a\tSpecify which day of the week the alert suppression window needs to be activated for. Only valid for intervalType = WEEK. [SUN, MON, TUE, WED, THU, FRI, SAT]\n  * endRepeat\trepeat object\tn/a\tsee endRepeat options found below\n  * endRepeat.type\tstring\tn/a\t[COUNT, NEVER, DATE]\n  * endRepeat.count\tinteger\tn/a\tend repeat after number of occurrences (only valid with COUNT type option)\n  * endRepeat.date\tdate\tyyyy-MM-dd\tend repeat after specific date (only valid with DATE type option)",
        "summary": "Updating an alert suppression window",
        "tags": [
          "Alerts & Notifications"
        ],
        "operationId": "Updatinganalertsuppressionwindow",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdatinganalertsuppressionwindowRequest"
            }
          },
          {
            "name": "alertSuppressionWindowId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/alert-suppression-windows/{alertSuppressionWindowId}/delete.json": {
      "post": {
        "description": "# Deleting an alert suppression window\nDeletes an alert suppression window.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {alertSuppressionWindowId} corresponds to the id of an alertSuppressionWindow, see the alert suppression window list endpoint for a listing of alert suppression windows.",
        "summary": "Deleting an alert suppression window",
        "tags": [
          "Alerts & Notifications"
        ],
        "operationId": "Deletinganalertsuppressionwindow",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "alertSuppressionWindowId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/groups.json": {
      "get": {
        "description": "# Labels list\nReturns a list of all labels (formerly called groups) configured in ThousandEyes. This includes both Agent and Test labels.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information",
        "summary": "Labels list",
        "tags": [
          "Labels"
        ],
        "operationId": "Labelslist",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/groups/{type}.json": {
      "get": {
        "description": "# Labels list by type\nReturns a list of all tests of the label (formerly called group) type specified, configured in ThousandEyes.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {type} corresponds to the following options:\n  * agents\n  * tests\n  * endpoint-agents\n  * endpoint-tests",
        "summary": "Labels list by type",
        "tags": [
          "Labels"
        ],
        "operationId": "Labelslistbytype",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "type",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/groups/{groupId}.json": {
      "get": {
        "description": "# Label details\nReturns details for a label (formerly called group) configured in ThousandEyes.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {groupId} the ID of the label to retrieve",
        "summary": "Label details",
        "tags": [
          "Labels"
        ],
        "operationId": "Labeldetails",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/groups/{type}/{groupId}.json": {
      "get": {
        "description": "# Label details (by label type)\nReturns a list of all labels (formerly called groups) configured in ThousandEyes. This includes both Agent and Test labels.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {type} corresponds to the following options:\n  * agents\n  * tests\n  * endpoint-agents\n  * endpoint-tests\n  * {groupId} the ID of the label to retrieve",
        "summary": "Label details (by label type)",
        "tags": [
          "Labels"
        ],
        "operationId": "Labeldetails(bylabeltype)",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "type",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/groups/tests/new.json": {
      "post": {
        "description": "# Creating a label\nCreates a new label (formerly called group) in ThousandEyes, based on properties provided in the POST data. In order to create a new label, the user attempting the creation must have sufficient privileges to create labels.\n\nRegular users are blocked from using any of the POST-based methods.\n\nNote: When creating or updating a label and assigning agents or tests, the user needs permission to modify the objects being added.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* {type} corresponds to the following options:\n  * agents\n  * tests\n  * endpoint-agents\n* POST body includes the following:\n  * name the name of the new label - this must be unique.\n  * tests an array of testId objects, if the type specified is tests\n  * agents an array of agentId objects, if the type specified is agents\n  * endpointAgents an array of agentId objects, if the type specified is endpoint-agents",
        "summary": "Creating a label",
        "tags": [
          "Labels"
        ],
        "operationId": "Creatingalabel",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "example": "{\n\t\"name\": \"Postman DevNet group\",\n\t\"tests\": [{\n\t\t\t\"testId\": {{testId}}\n\t\t}\n\t]\n}",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/groups/{groupId}/update.json": {
      "post": {
        "description": "# Updating a label\nUpdates a label (formerly called group) in ThousandEyes, based on properties provided in the POST data. In order to edit a label, the user must have access to the target label, and have access to modify the objects that the label contains. For example, to update an agent label, the user needs the Edit Agents permission assigned to their role.\n\nRegular users are blocked from using any of the POST-based methods.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* groupId the label that you wish to update, found in either the /groups or the /groups/{type} endpoint.",
        "summary": "Updating a label",
        "tags": [
          "Labels"
        ],
        "operationId": "Updatingalabel",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "example": "{\n\t\"name\": \"Postman DevNet group updated\",\n\t\"tests\": [{\n\t\t\t\"testId\": {{testId}}\n\t\t}\n\t]\n}",
              "type": "string"
            }
          },
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/groups/{groupId}/delete.json": {
      "post": {
        "description": "# Deleting a label\nDeletes a label (formerly called group) currently configured in ThousandEyes. Note that built-in labels (with negative groupId numbers) are not eligible for deletion.\n\n# Optional (Querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n\n# Request\n* groupId the label that you wish to delete, found in either the /groups or the /groups/{type} endpoint.",
        "summary": "Deleting a label",
        "tags": [
          "Labels"
        ],
        "operationId": "Deletingalabel",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/reports.json": {
      "get": {
        "description": "# Reports list\nThis endpoint returns a list of reports configured in ThousandEyes in the context of the user‚Äôs current account group. This endpoint requires the View Reports permission be assigned to the role of the user accessing this endpoint. Use this data to find a report in your account, which is then used in other endpoint to access aggregated data.\n\n# Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information",
        "summary": "Reports list",
        "tags": [
          "Reports"
        ],
        "operationId": "Reportslist",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/reports/{reportId}.json": {
      "get": {
        "description": "# Report detail\nThis endpoint returns a list of widgets configured in reports configured in ThousandEyes. Seed this endpoint with a reportId found from the /reports endpoint. This endpoint requires the View Reports permission be assigned to the role of the user accessing this endpoint.\n\n# Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n* {reportId} the ID of the report you‚Äôre interested in.",
        "summary": "Report detail",
        "tags": [
          "Reports"
        ],
        "operationId": "Reportdetail",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "reportId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/reports/{reportId}/{dataComponentId}.json": {
      "get": {
        "description": "# Report data\nThis endpoint returns actual metrics used in the generation of the reports shown. Unlike the metadata options, this endpoint accepts parameters for a time range shown in the data, which defaults to 7 days.\n\n# Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* window=[0-9]+[smhdw]? specifies a window of time for the result set. See Time Ranges for more information.\n* from=YYYY-mm-ddTHH:MM:SS&to=YYYY-mm-ddTHH:MM:SS specifies an explicit start (and optionally, end) for your range of data. See Time Ranges for more information.\n* aid={aid} optional, changes the account group context of the current request. If an invalid account group ID is specified as a parameter, the response will come back as an HTTP/400 error.\n* {reportId} the ID of the report you‚Äôre interested in.\n* {dataComponentId} the ID of the data component for which to retrieve data.",
        "summary": "Report data",
        "tags": [
          "Reports"
        ],
        "operationId": "Reportdata",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "reportId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "dataComponentId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/reports/{reportId}/delete.json": {
      "post": {
        "description": "# Deleting a report\nDeletes the specified report in ThousandEyes, based on the reportId provided in the API request. Users with the Edit reports for all users in account group permission (Account Admin) can delete any report. Users with Edit own reports permission (Regular User) can only delete the reports they have created.\n\n# Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n* {reportId} the ID of the report you would like to delete",
        "summary": "Deleting a report",
        "tags": [
          "Reports"
        ],
        "operationId": "Deletingareport",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "reportId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/report-snapshots.json": {
      "get": {
        "description": "# Report snapshots list\nThis endpoint returns a list of report snapshots configured in ThousandEyes in the context of the user‚Äôs current account group. This endpoint requires the View Reports permission be assigned to the role of the user accessing this endpoint. Use this data to find a report snapshot in your account, which is then used in other endpoint to access aggregated data.\n\n* Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information",
        "summary": "Report snapshots list",
        "tags": [
          "Reports"
        ],
        "operationId": "Reportsnapshotslist",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/report-snapshots/{snapshotId}.json": {
      "get": {
        "description": "# Report snapshot detail\nThis endpoint returns a list of widgets configured in reports configured in ThousandEyes. Seed this endpoint with a reportId found from the /reports endpoint. This endpoint requires the View Reports permission be assigned to the role of the user accessing this endpoint.\n\n* Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n* {snapshotId} the ID of the report snapshot you‚Äôre interested in.",
        "summary": "Report snapshot detail",
        "tags": [
          "Reports"
        ],
        "operationId": "Reportsnapshotdetail",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "snapshotId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/report-snapshots/{snapshotId}/{dataComponentId}.json": {
      "get": {
        "description": "# Report snapshot data\nThis endpoint returns actual metrics used in the generation of the report snapshot shown.\n\n# Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional, changes the account group context of the current request. If an invalid account group ID is specified as a parameter, the response will come back as an HTTP/400 error.\n* {snapshotId} the ID of the report snapshot you‚Äôre interested in.\n* {dataComponentId} the ID of the data component for which to retrieve data.",
        "summary": "Report snapshot data",
        "tags": [
          "Reports"
        ],
        "operationId": "Reportsnapshotdata",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "snapshotId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "dataComponentId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/report-snapshot/{snapshotId}/delete.json": {
      "post": {
        "description": "# Deleting a report snapshot\nDeletes the specified report snapshot in ThousandEyes, based on the snapshotId provided in the API request. Users with the Edit reports for all users in account group permission (Account Admin) can delete any report snapshot. Users with Edit own reports permission (Regular User) can only delete the report snapshots for reports they have created.\n\n# Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional and requires the user to be assigned to the target account group, specifies the account group context of the request, obtained from the /account-groups endpoint. Specifying this parameter without the user being assigned to the target account will result in an error response. See Account group context for more information\n* {snapshotId} the ID of the report snapshot you would like to delete",
        "summary": "Deleting a report snapshot",
        "tags": [
          "Reports"
        ],
        "operationId": "Deletingareportsnapshot",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "snapshotId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/account-groups.json": {
      "get": {
        "description": "# Account group list\nReturns a list of all account groups available to the current user. The aid value returned for an account in this list of account groups can be used in queries elsewhere within the app. See Account Context for more information on changing Account Group context.\n\n# Optional (querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional, changes the account group context of the current request. If an invalid account group ID is specified as a parameter, the response will come back as an HTTP/400 error",
        "summary": "Account group list",
        "tags": [
          "Administrative endpoints"
        ],
        "operationId": "Accountgrouplist",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/account-groups/{aid}.json": {
      "get": {
        "description": "# Account group detail\nReturns detailed information about a specific account group. Requires that the user making the request has the View all account groups settings permission.\n\n# Optional (querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n\n# Request\n* aid={aid} account group to query for detail.",
        "summary": "Account group detail",
        "tags": [
          "Administrative endpoints"
        ],
        "operationId": "Accountgroupdetail",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "aid",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/account-groups/new.json": {
      "post": {
        "description": "# Creating an account group\nCreates a new account group. Requires the Edit all account groups permission.\n\n# Optional (querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n\n# Request\n* content-type and accept headers must be set (both to application/json) when using this endpoint.\n* Request body allows update of certain account group fields:\n  * accountGroupName\tstring\toptional\tname of the account group. To rename the account group, specify a new name.\n  * agents\tarray of agent objects\toptional\tTo grant access to enterprise agents, specify the agent list. \"agents\":[{\"agentId\": 1234}]. Note that this is not an additive list - the full list must be specified if changing access to agents.",
        "summary": "Creating an account group",
        "tags": [
          "Administrative endpoints"
        ],
        "operationId": "Creatinganaccountgroup",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreatinganaccountgroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/account-groups/{aid}/update.json": {
      "post": {
        "description": "# Updating an account group\nModifies an account group. This can include changing the account group‚Äôs name, or modifying the list of users assigned to the account group.\n\n# Optional (querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n\n# Request\n* aid={aid} account group to query for detail.\n* content-type and accept headers must be set (both to application/json) when using this endpoint.\n* Request body allows update of certain account group fields:\n  * accountGroupName\tstring\toptional\tname of the account group. To rename the account group, specify a new name.\n  * agents\tarray of agent objects\toptional\tTo grant access to enterprise agents, specify the agent list. \"agents\":[{\"agentId\": 1234}]. Note that this is not an additive list - the full list must be specified if changing access to agents.",
        "summary": "Updating an account group",
        "tags": [
          "Administrative endpoints"
        ],
        "operationId": "Updatinganaccountgroup",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdatinganaccountgroupRequest"
            }
          },
          {
            "name": "aid",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/account-groups/{aid}/delete.json": {
      "post": {
        "description": "# Deleting an account group\nDeletes an account group. Requires the following permissions to be assigned to the user making the request:\n* Assign management permissions\n* Delete account\n* Edit all account groups\n\n# Optional (querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional, changes the organization context of the current request. If an invalid account group ID is specified as a parameter, the response will come back as an HTTP/400 error. This must not match the account group to be deleted.\n\n# Request\n* {aid} account group to delete.",
        "summary": "Deleting an account group",
        "tags": [
          "Administrative endpoints"
        ],
        "operationId": "Deletinganaccountgroup",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "aid",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/users.json": {
      "get": {
        "description": "# User list\nReturns the list of all users that belong to the Organization, your selected aid is part of. Returns detailed information about a specific user. Requires that the user making the request has the API Access and View all users permissions. See Account Context for more information on changing Account Group context.\n\n# Optional (querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional, changes the account group context of the current request. If an invalid account group ID is specified as a parameter, the response will come back as an HTTP/400 error",
        "summary": "User list",
        "tags": [
          "Administrative endpoints"
        ],
        "operationId": "Userlist",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/users/{uid}.json": {
      "get": {
        "description": "# User detail\nReturns detailed information about a specific user. Requires that the user making the request has the API Access and View all users permissions.\n\n# Optional (querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional, changes the account group context of the current request. If an invalid account group ID is specified as a parameter, the response will come back as an HTTP/400 error\n\n# Request\n* uid={uid} unique ID for the user to query for detail.",
        "summary": "User detail",
        "tags": [
          "Administrative endpoints"
        ],
        "operationId": "Userdetail",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/users/new.json": {
      "post": {
        "description": "# Adding a user\nCreates a new user.\n\n# Optional (querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional, changes the account group context of the current request. If an invalid account group ID is specified as a parameter, the response will come back as an HTTP/400 error\n\n# Request\n* content-type and accept headers must be set (both to application/json) when using this endpoint.\n* Request body should contain the following fields:\n  * name\tstring\toptional\tthe name of the user\n  * email\tstring\trequired\temail address for the user\n  * loginAccountGroup\taccountGroup object\trequired\tlogin accountGroup for the user. If the user being added is already associated with another ThousandEyes organization, this value will be   * ignored. The user (once added) can modify his default account group as needed.\n  * loginAccountGroup.aid\tinteger\trequired for loginAccountGroup object\tsystem-generated unique ID of the account group\n  * accountGroupRoles\tlist of accountGroupRole objects\tsee notes\tsee below; either the accountGroupRoles object or the allAccountGroupRoles object must be specified.\n  * accountGroupRoles.accountGroupName.aid\tinteger\trequired for accountGroupName object\tunique account ID for the accountGroupName\n  * accountGroupRoles.roles.roleID\tinteger\trequired for roles object\tsystem-defined unique ID of the role\n  * allAccountGroupRoles\tlist of roles objects\toptional\teither the accountGroupRoles object or the allAccountGroupRoles object must be specified.\n  * allAccountGroupRoles.roles.roleID\tinteger\trequired for roles object\tsystem-defined unique ID of the role\n\nA few notes on the topic of user creation:\n* If the user is already a member of another ThousandEyes customer‚Äôs organization, the user will need to set their own login account group.\n* Any update which contains accountGroupRoles is a replace-based update, rather than a delta-based update.",
        "summary": "Adding a user",
        "tags": [
          "Administrative endpoints"
        ],
        "operationId": "Addingauser",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AddingauserRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/users/{uid}/update.json": {
      "post": {
        "description": "# Updating a user\nModifies a user. This can include changing the user‚Äôs name, email address, account group assignments, or roles. Use of this endpoint requires the Edit users in all account groups or Edit users permission.\n\n# Optional (querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional, changes the account group context of the current request. If an invalid account group ID is specified as a parameter, the response will come back as an HTTP/400 error\n\n# Request\n* uid={uid} is the unique user ID for the user\n* content-type and accept headers must be set (both to application/json) when using this endpoint.\n* Request body allows update of certain user fields:\n  * name\tstring\trequired\tthe name of the user\n  * email\tstring\trequired\temail address for the user\n  * loginAccountGroup\taccountGroup object\trequired\tlogin accountGroup for the user\n  * loginAccountGroup.aid\tinteger\trequired for loginAccountGroup object\tsystem-generated unique ID of the account group\n  * accountGroupRoles\tlist of accountGroupRole objects\toptional\tsee below\n  * accountGroupRoles.accountGroupName.aid\tinteger\trequired for accountGroupName object\tunique account ID for the accountGroup\n  * accountGroupRoles.roles.roleID\tinteger\trequired for roles object\tsystem-defined unique ID of the role\n  * allAccountGroupRoles\tlist of roles objects\toptional\tsee below\n  * allAccountGroupRoles.roles.roleID\tinteger\trequired for roles object\tsystem-defined unique ID of the role\n\nA few notes on the topic of user modifications:\n* If a user‚Äôs email is updated, the user will need to validate the username change before being able to subsequently log in, or execute API operations.\n* Any update which contains accountGroupRoles is a replace-based update, rather than a delta-based update.",
        "summary": "Updating a user",
        "tags": [
          "Administrative endpoints"
        ],
        "operationId": "Updatingauser",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdatingauserRequest"
            }
          },
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/users/{uid}/delete.json": {
      "post": {
        "description": "# Deleting a user\nDeletes a user. Requires Edit users in all account groups or Edit users permissions to be assigned to the user making the request.\n\n# Optional (querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional, changes the account group context of the current request. If an invalid account group ID is specified as a parameter, the response will come back as an HTTP/400 error\n\n# Request\n* uid={uid} is the unique user ID for the user to delete.\n* content-type and accept headers must be set (both to application/json) when using this endpoint.",
        "summary": "Deleting a user",
        "tags": [
          "Administrative endpoints"
        ],
        "operationId": "Deletingauser",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/roles.json": {
      "get": {
        "description": "# Role list\nReturns a list of all roles defined and visible to the current user.\n\n# Optional (querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional, changes the account group context of the current request. If an invalid account group ID is specified as a parameter, the response will come back as an HTTP/400 error",
        "summary": "Role list",
        "tags": [
          "Administrative endpoints"
        ],
        "operationId": "Rolelist",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/roles/{roleId}.json": {
      "get": {
        "description": "# Role detail\nReturns detailed information about a role, defining role name, ID and assigned permissions.\n\n# Optional (querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional, changes the account group context of the current request. If an invalid account group ID is specified as a parameter, the response will come back as an HTTP/400 error\n\n# Request\n* {roleId} is the unique ID for the role",
        "summary": "Role detail",
        "tags": [
          "Administrative endpoints"
        ],
        "operationId": "Roledetail",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/roles/new.json": {
      "post": {
        "description": "# Creating a role\nAllows creation of a role, programmatically.\n\n# Optional (querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional, changes the account group context of the current request. If an invalid account group ID is specified as a parameter, the response will come back as an HTTP/400 error\n\n# Request\n* content-type and accept headers must be set (both to application/json) when using this endpoint.\n* Request body should contain the following fields:\n  * roleName\tstring\trequired\tthe name of the role\n  * permissions\tlist of permission objects\toptional\tsee below\n  * permissions.permissionId\tinteger\trequired for permissions object\tsystem-defined unique ID of the permission\n\nA few notes on the topic of role creation:\n* Post with a role name, and permissions that need to be assigned to the role.\n* Permission definitions and details can be obtained from the permissions endpoint.",
        "summary": "Creating a role",
        "tags": [
          "Administrative endpoints"
        ],
        "operationId": "Creatingarole",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreatingaroleRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/roles/{roleId}/update.json": {
      "post": {
        "description": "# Updating a role\nModifies a user-defined role by changing the role name or permissions assigned.\n\n# Optional (querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional, changes the account group context of the current request. If an invalid account group ID is specified as a parameter, the response will come back as an HTTP/400 error\n\n# Request\n* {roleId} is the unique ID for the role\n* content-type and accept headers must be set (both to application/json) when using this endpoint.\n* Request body allows update of certain role fields:\n  * roleName\tstring\toptional\tthe name of the role\n  * permissions\tlist of permission objects\toptional\tsee below (and notes below)\n  * permissions.permissionId\tinteger\trequired for permissions object\tsystem-defined unique ID of the permission\n\nA few notes related to role modifications:\n* The full list of permissions must be sent, this endpoint does not support a delta-based grant or revocation of permissions.\n* Permission definitions and details can be obtained from the permissions endpoint.",
        "summary": "Updating a role",
        "tags": [
          "Administrative endpoints"
        ],
        "operationId": "Updatingarole",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdatingaroleRequest"
            }
          },
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/permissions.json": {
      "get": {
        "description": "# Permission list\nReturns a list of all assignable permissions, which is used in the context of modifying roles.\n\nUsers must be in a role that is assigned managment permissions in order to access this endpoint. Users without management permissions attempting to access this endpoint will have an HTTP/403 response code returned.\n\n# Optional Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional, changes the account group context of the current request. If an invalid account group ID is specified as a parameter, the response will come back as an HTTP/400 error",
        "summary": "Permission list",
        "tags": [
          "Administrative endpoints"
        ],
        "operationId": "Permissionlist",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/audit/user-events/search.json": {
      "get": {
        "description": "# Activity log\nReturns a list of activity log events. User with View activity log for all users in account group permission can see all activity log events in the current account group. User with View own activity log permission can see own activity log events in the current account group. See Account Context for more information on changing Account Group context.\n\n# Optional (querystring) Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information.\n* window=[0-9]+[smhdw]? specifies a window of time for the result set. See Time Ranges for more information.\n* from=YYYY-mm-ddTHH:MM:SS&to=YYYY-mm-ddTHH:MM:SS specifies an explicit start (and optionally, end) for your range of data. See Time Ranges for more information.\n* aid={aid} optional, changes the account group context of the current request. If an invalid account group ID is specified as a parameter, the response will come back as an HTTP/400 error.",
        "summary": "Activity log",
        "tags": [
          "Administrative endpoints"
        ],
        "operationId": "Activitylog",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/usage.json": {
      "get": {
        "description": "# Obtaining usage details\nThis endpoint returns usage for the current period. This endpoint requires the View Billing permission (a management permission), and provides visibility across all account groups within the organization. For users who have access to view billing in multiple organizations, query the endpoint using an aid querystring parameter (see optional parameters, below) from each organization.\n\nBilling information (for past months) is not available via this endpoint; this will be implemented as a separate endpoint.\n\n# Optional Parameters\n* format=json|xml optional, specifies the format of output requested. See Output Formats for more information\n* aid={aid} optional, changes the organization context of the current request. If an invalid account group ID is specified as a parameter, the response will come back as an HTTP/400 error. When querying the /usage endpoint, the aid parameter is used to provide usage details for the organization to which the account group ID belongs. The output always provides visibility across all account groups within the specified organization.",
        "summary": "Obtaining usage details",
        "tags": [
          "Usage"
        ],
        "operationId": "Obtainingusagedetails",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    }
  },
  "definitions": {
    "InstanttestRequest": {
      "title": "InstanttestRequest",
      "example": {
        "agents": [
          {
            "agentId": 55521
          }
        ],
        "testName": "Postman - developer.cisco.com",
        "server": "developer.cisco.com"
      },
      "type": "object",
      "properties": {
        "agents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Agent"
          }
        },
        "testName": {
          "type": "string"
        },
        "server": {
          "type": "string"
        }
      },
      "required": [
        "agents",
        "testName",
        "server"
      ]
    },
    "Agent": {
      "title": "Agent",
      "example": {
        "agentId": 55521
      },
      "type": "object",
      "properties": {
        "agentId": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "agentId"
      ]
    },
    "CreatingacredentialRequest": {
      "title": "CreatingacredentialRequest",
      "example": {
        "name": "new_api_credential_postman",
        "value": "secret p@ssword devnet"
      },
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "value"
      ]
    },
    "UpdatingacredentialRequest": {
      "title": "UpdatingacredentialRequest",
      "example": {
        "value": "updated password devnet"
      },
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        }
      },
      "required": [
        "value"
      ]
    },
    "UpdatinganagentRequest": {
      "title": "UpdatinganagentRequest",
      "example": {
        "newAgentName": "postman devnet endpoint agent updated"
      },
      "type": "object",
      "properties": {
        "newAgentName": {
          "type": "string"
        }
      },
      "required": [
        "newAgentName"
      ]
    },
    "CreatinganEndpointTestRequest": {
      "title": "CreatinganEndpointTestRequest",
      "example": {
        "authType": "NONE",
        "flagPing": true,
        "flagTraceroute": true,
        "groupId": 1,
        "httpTimeLimit": 5000,
        "maxMachines": 5,
        "interval": 3600,
        "sslVersion": 0,
        "targetResponseTime": 5000,
        "testName": "Postman HTTP test DevNet",
        "url": "developer.cisco.com",
        "verifyCertHostname": true
      },
      "type": "object",
      "properties": {
        "authType": {
          "type": "string"
        },
        "flagPing": {
          "type": "boolean"
        },
        "flagTraceroute": {
          "type": "boolean"
        },
        "groupId": {
          "type": "integer",
          "format": "int32"
        },
        "httpTimeLimit": {
          "type": "integer",
          "format": "int32"
        },
        "maxMachines": {
          "type": "integer",
          "format": "int32"
        },
        "interval": {
          "type": "integer",
          "format": "int32"
        },
        "sslVersion": {
          "type": "integer",
          "format": "int32"
        },
        "targetResponseTime": {
          "type": "integer",
          "format": "int32"
        },
        "testName": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "verifyCertHostname": {
          "type": "boolean"
        }
      },
      "required": [
        "authType",
        "flagPing",
        "flagTraceroute",
        "groupId",
        "httpTimeLimit",
        "maxMachines",
        "interval",
        "sslVersion",
        "targetResponseTime",
        "testName",
        "url",
        "verifyCertHostname"
      ]
    },
    "CreatinginstanttestRequest": {
      "title": "CreatinginstanttestRequest",
      "example": {
        "authType": "NONE",
        "flagPing": true,
        "flagTraceroute": true,
        "groupId": 130096,
        "httpTimeLimit": 5000,
        "maxMachines": 5,
        "sslVersion": 0,
        "targetResponseTime": 5000,
        "testName": "Postman DevNet Instant HTTP test",
        "url": "developer.cisco.com",
        "verifyCertHostname": true
      },
      "type": "object",
      "properties": {
        "authType": {
          "type": "string"
        },
        "flagPing": {
          "type": "boolean"
        },
        "flagTraceroute": {
          "type": "boolean"
        },
        "groupId": {
          "type": "integer",
          "format": "int32"
        },
        "httpTimeLimit": {
          "type": "integer",
          "format": "int32"
        },
        "maxMachines": {
          "type": "integer",
          "format": "int32"
        },
        "sslVersion": {
          "type": "integer",
          "format": "int32"
        },
        "targetResponseTime": {
          "type": "integer",
          "format": "int32"
        },
        "testName": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "verifyCertHostname": {
          "type": "boolean"
        }
      },
      "required": [
        "authType",
        "flagPing",
        "flagTraceroute",
        "groupId",
        "httpTimeLimit",
        "maxMachines",
        "sslVersion",
        "targetResponseTime",
        "testName",
        "url",
        "verifyCertHostname"
      ]
    },
    "UpdatinganalertruleRequest": {
      "title": "UpdatinganalertruleRequest",
      "example": {
        "alertType": "FTP",
        "default": 0,
        "expression": "((reachability < 90%))",
        "minimumSources": 10,
        "notes": "FTP Alert rule created using write api",
        "description": "TE FTP Alert rule with write api",
        "notifications": {
          "email": {
            "message": "",
            "recipient": [
              "postman+devnet@cisco.com"
            ]
          },
          "thirdParty": [
            {
              "integrationId": "sl-101",
              "integrationType": "SLACK"
            }
          ],
          "webhook": [
            {
              "integrationId": "wb-201",
              "integrationType": "WEBHOOK"
            }
          ]
        },
        "notifyOnClear": 1,
        "roundsViolatingOutOf": 10,
        "roundsViolatingRequired": 10,
        "roundsViolatingMode": "ANY",
        "ruleName": "Postman DevNet FTP Alert Rule updated",
        "sourceMeasure": "percent",
        "testIds": [
          1001,
          1002
        ]
      },
      "type": "object",
      "properties": {
        "alertType": {
          "type": "string"
        },
        "default": {
          "type": "integer",
          "format": "int32"
        },
        "expression": {
          "type": "string"
        },
        "minimumSources": {
          "type": "integer",
          "format": "int32"
        },
        "notes": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "notifications": {
          "$ref": "#/definitions/Notifications"
        },
        "notifyOnClear": {
          "type": "integer",
          "format": "int32"
        },
        "roundsViolatingOutOf": {
          "type": "integer",
          "format": "int32"
        },
        "roundsViolatingRequired": {
          "type": "integer",
          "format": "int32"
        },
        "roundsViolatingMode": {
          "type": "string"
        },
        "ruleName": {
          "type": "string"
        },
        "sourceMeasure": {
          "type": "string"
        },
        "testIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "required": [
        "alertType",
        "default",
        "expression",
        "minimumSources",
        "notes",
        "description",
        "notifications",
        "notifyOnClear",
        "roundsViolatingOutOf",
        "roundsViolatingRequired",
        "roundsViolatingMode",
        "ruleName",
        "sourceMeasure",
        "testIds"
      ]
    },
    "Notifications": {
      "title": "Notifications",
      "example": {
        "email": {
          "message": "",
          "recipient": [
            "postman+devnet@cisco.com"
          ]
        },
        "thirdParty": [
          {
            "integrationId": "sl-101",
            "integrationType": "SLACK"
          }
        ],
        "webhook": [
          {
            "integrationId": "wb-201",
            "integrationType": "WEBHOOK"
          }
        ]
      },
      "type": "object",
      "properties": {
        "email": {
          "$ref": "#/definitions/Email"
        },
        "thirdParty": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ThirdParty"
          }
        },
        "webhook": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Webhook"
          }
        }
      },
      "required": [
        "email",
        "thirdParty",
        "webhook"
      ]
    },
    "Email": {
      "title": "Email",
      "example": {
        "message": "",
        "recipient": [
          "postman+devnet@cisco.com"
        ]
      },
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "recipient": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "message",
        "recipient"
      ]
    },
    "ThirdParty": {
      "title": "ThirdParty",
      "example": {
        "integrationId": "sl-101",
        "integrationType": "SLACK"
      },
      "type": "object",
      "properties": {
        "integrationId": {
          "type": "string"
        },
        "integrationType": {
          "type": "string"
        }
      },
      "required": [
        "integrationId",
        "integrationType"
      ]
    },
    "Webhook": {
      "title": "Webhook",
      "example": {
        "integrationId": "wb-201",
        "integrationType": "WEBHOOK"
      },
      "type": "object",
      "properties": {
        "integrationId": {
          "type": "string"
        },
        "integrationType": {
          "type": "string"
        }
      },
      "required": [
        "integrationId",
        "integrationType"
      ]
    },
    "CreatinganalertsuppressionwindowRequest": {
      "title": "CreatinganalertsuppressionwindowRequest",
      "example": {
        "alertSuppressionWindowName": "Postman DevNet 30 min asw created via API",
        "enabled": 1,
        "startDateTime": "2020-01-01 00:00:00",
        "timezone": "Europe/Amsterdam",
        "duration": 1800,
        "repeat": {
          "type": "DAY"
        },
        "endRepeat": {
          "type": "NEVER"
        }
      },
      "type": "object",
      "properties": {
        "alertSuppressionWindowName": {
          "type": "string"
        },
        "enabled": {
          "type": "integer",
          "format": "int32"
        },
        "startDateTime": {
          "type": "string"
        },
        "timezone": {
          "type": "string"
        },
        "duration": {
          "type": "integer",
          "format": "int32"
        },
        "repeat": {
          "$ref": "#/definitions/Repeat"
        },
        "endRepeat": {
          "$ref": "#/definitions/EndRepeat"
        }
      },
      "required": [
        "alertSuppressionWindowName",
        "enabled",
        "startDateTime",
        "timezone",
        "duration",
        "repeat",
        "endRepeat"
      ]
    },
    "Repeat": {
      "title": "Repeat",
      "example": {
        "type": "DAY"
      },
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        }
      },
      "required": [
        "type"
      ]
    },
    "EndRepeat": {
      "title": "EndRepeat",
      "example": {
        "type": "NEVER"
      },
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        }
      },
      "required": [
        "type"
      ]
    },
    "UpdatinganalertsuppressionwindowRequest": {
      "title": "UpdatinganalertsuppressionwindowRequest",
      "example": {
        "alertSuppressionWindowName": "Postman DevNet 30 min asw created via API",
        "enabled": 1,
        "startDateTime": "2020-01-01 00:00:00",
        "timezone": "Europe/Amsterdam",
        "duration": 1800,
        "repeat": {
          "type": "DAY"
        },
        "endRepeat": {
          "type": "NEVER"
        }
      },
      "type": "object",
      "properties": {
        "alertSuppressionWindowName": {
          "type": "string"
        },
        "enabled": {
          "type": "integer",
          "format": "int32"
        },
        "startDateTime": {
          "type": "string"
        },
        "timezone": {
          "type": "string"
        },
        "duration": {
          "type": "integer",
          "format": "int32"
        },
        "repeat": {
          "$ref": "#/definitions/Repeat"
        },
        "endRepeat": {
          "$ref": "#/definitions/EndRepeat"
        }
      },
      "required": [
        "alertSuppressionWindowName",
        "enabled",
        "startDateTime",
        "timezone",
        "duration",
        "repeat",
        "endRepeat"
      ]
    },
    "CreatinganaccountgroupRequest": {
      "title": "CreatinganaccountgroupRequest",
      "example": {
        "accountGroupName": "Postman DevNet account group"
      },
      "type": "object",
      "properties": {
        "accountGroupName": {
          "type": "string"
        }
      },
      "required": [
        "accountGroupName"
      ]
    },
    "UpdatinganaccountgroupRequest": {
      "title": "UpdatinganaccountgroupRequest",
      "example": {
        "accountGroupName": "Postman DevNet account group updated"
      },
      "type": "object",
      "properties": {
        "accountGroupName": {
          "type": "string"
        }
      },
      "required": [
        "accountGroupName"
      ]
    },
    "AddingauserRequest": {
      "title": "AddingauserRequest",
      "example": {
        "name": "Postman DevNet User",
        "email": "postman+devnet@cisco.com",
        "loginAccountGroup": {
          "aid": 691
        },
        "accountGroupRoles": [
          {
            "accountGroup": {
              "aid": 315
            },
            "roles": [
              {
                "roleId": 57
              }
            ]
          },
          {
            "accountGroup": {
              "aid": 691
            },
            "roles": [
              {
                "roleId": 60
              }
            ]
          }
        ],
        "allAccountGroupRoles": [
          {
            "roleId": 1140
          }
        ]
      },
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "loginAccountGroup": {
          "$ref": "#/definitions/LoginAccountGroup"
        },
        "accountGroupRoles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountGroupRole"
          }
        },
        "allAccountGroupRoles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AllAccountGroupRole"
          }
        }
      },
      "required": [
        "name",
        "email",
        "loginAccountGroup",
        "accountGroupRoles",
        "allAccountGroupRoles"
      ]
    },
    "LoginAccountGroup": {
      "title": "LoginAccountGroup",
      "example": {
        "aid": 691
      },
      "type": "object",
      "properties": {
        "aid": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "aid"
      ]
    },
    "AccountGroupRole": {
      "title": "AccountGroupRole",
      "example": {
        "accountGroup": {
          "aid": 315
        },
        "roles": [
          {
            "roleId": 57
          }
        ]
      },
      "type": "object",
      "properties": {
        "accountGroup": {
          "$ref": "#/definitions/AccountGroup"
        },
        "roles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Role"
          }
        }
      },
      "required": [
        "accountGroup",
        "roles"
      ]
    },
    "AccountGroup": {
      "title": "AccountGroup",
      "example": {
        "aid": 315
      },
      "type": "object",
      "properties": {
        "aid": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "aid"
      ]
    },
    "Role": {
      "title": "Role",
      "example": {
        "roleId": 57
      },
      "type": "object",
      "properties": {
        "roleId": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "roleId"
      ]
    },
    "AllAccountGroupRole": {
      "title": "AllAccountGroupRole",
      "example": {
        "roleId": 1140
      },
      "type": "object",
      "properties": {
        "roleId": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "roleId"
      ]
    },
    "UpdatingauserRequest": {
      "title": "UpdatingauserRequest",
      "example": {
        "name": "Postman DevNet User Updated",
        "email": "postman+devnet@cisco.com",
        "loginAccountGroup": {
          "aid": 691
        },
        "accountGroupRoles": [
          {
            "accountGroup": {
              "aid": 315
            },
            "roles": [
              {
                "roleId": 57
              }
            ]
          },
          {
            "accountGroup": {
              "aid": 691
            },
            "roles": [
              {
                "roleId": 60
              }
            ]
          }
        ],
        "allAccountGroupRoles": [
          {
            "roleId": 1140
          }
        ]
      },
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "loginAccountGroup": {
          "$ref": "#/definitions/LoginAccountGroup"
        },
        "accountGroupRoles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountGroupRole"
          }
        },
        "allAccountGroupRoles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AllAccountGroupRole"
          }
        }
      },
      "required": [
        "name",
        "email",
        "loginAccountGroup",
        "accountGroupRoles",
        "allAccountGroupRoles"
      ]
    },
    "CreatingaroleRequest": {
      "title": "CreatingaroleRequest",
      "example": {
        "roleName": "Postman DevNet role",
        "permissions": [
          {
            "permissionId": 1
          },
          {
            "permissionId": 2
          }
        ]
      },
      "type": "object",
      "properties": {
        "roleName": {
          "type": "string"
        },
        "permissions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Permission"
          }
        }
      },
      "required": [
        "roleName",
        "permissions"
      ]
    },
    "Permission": {
      "title": "Permission",
      "example": {
        "permissionId": 1
      },
      "type": "object",
      "properties": {
        "permissionId": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "permissionId"
      ]
    },
    "UpdatingaroleRequest": {
      "title": "UpdatingaroleRequest",
      "example": {
        "roleName": "Postman DevNet role",
        "permissions": [
          {
            "permissionId": 1
          },
          {
            "permissionId": 2
          }
        ]
      },
      "type": "object",
      "properties": {
        "roleName": {
          "type": "string"
        },
        "permissions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Permission"
          }
        }
      },
      "required": [
        "roleName",
        "permissions"
      ]
    }
  },
  "tags": [
    {
      "name": "Instant tests"
    },
    {
      "name": "Tests"
    },
    {
      "name": "Network"
    },
    {
      "name": "Web"
    },
    {
      "name": "DNS"
    },
    {
      "name": "SIP"
    },
    {
      "name": "Credentials"
    },
    {
      "name": "Endpoint Agents"
    },
    {
      "name": "Endpoint Data"
    },
    {
      "name": "Endpoint Scheduled Tests"
    },
    {
      "name": "Endpoint Scheduled Test Data"
    },
    {
      "name": "Endpoint Instant Tests"
    },
    {
      "name": "Snapshots"
    },
    {
      "name": "Agent cluster"
    },
    {
      "name": "Agents & Monitors"
    },
    {
      "name": "Alerts & Notifications"
    },
    {
      "name": "Labels"
    },
    {
      "name": "Reports"
    },
    {
      "name": "Administrative endpoints"
    },
    {
      "name": "Usage"
    }
  ]
}